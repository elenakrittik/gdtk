    Finished dev [unoptimized + debuginfo] target(s) in 0.20s
     Running `target\debug\gdtk.exe parse --file .\incremental.gd`
[crates\gdtk-parser\src\functions.rs:20:31] "got comma" = "got comma"
[crates\gdtk-parser\src\functions.rs:20:31] "got comma" = "got comma"
[crates\gdtk\src\commands\parse.rs:14:9] &parsed = ASTClass {
    class_name: Some(
        "MyClass",
    ),
    extends: Some(
        "BaseClass",
    ),
    icon: Some(
        ASTAnnotation {
            identifier: "icon",
            arguments: [
                String(
                    "res://path/to/optional/icon.svg",
                ),
            ],
        },
    ),
    variables: [
        ASTVariable {
            identifier: "a",
            infer_type: false,
            typehint: None,
            value: Some(
                Number(
                    5,
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "s",
            infer_type: false,
            typehint: None,
            value: Some(
                String(
                    "Hello",
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "arr",
            infer_type: false,
            typehint: None,
            value: Some(
                Array(
                    [
                        Number(
                            1,
                        ),
                        Number(
                            2,
                        ),
                        Number(
                            3,
                        ),
                    ],
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "dict",
            infer_type: false,
            typehint: None,
            value: Some(
                Dictionary(
                    [
                        (
                            String(
                                "key",
                            ),
                            String(
                                "value",
                            ),
                        ),
                        (
                            Number(
                                2,
                            ),
                            Number(
                                3,
                            ),
                        ),
                    ],
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "other_dict",
            infer_type: false,
            typehint: None,
            value: Some(
                Dictionary(
                    [
                        (
                            String(
                                "key",
                            ),
                            String(
                                "value",
                            ),
                        ),
                        (
                            String(
                                "other_key",
                            ),
                            Number(
                                2,
                            ),
                        ),
                    ],
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "typed_var",
            infer_type: false,
            typehint: Some(
                "int",
            ),
            value: None,
            kind: Regular,
        },
        ASTVariable {
            identifier: "inferred_type",
            infer_type: true,
            typehint: None,
            value: Some(
                String(
                    "String",
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "ANSWER",
            infer_type: false,
            typehint: None,
            value: Some(
                Number(
                    42,
                ),
            ),
            kind: Constant,
        },
        ASTVariable {
            identifier: "ANSWER",
            infer_type: false,
            typehint: Some(
                "int",
            ),
            value: Some(
                Number(
                    42,
                ),
            ),
            kind: Constant,
        },
        ASTVariable {
            identifier: "THE_NAME",
            infer_type: false,
            typehint: None,
            value: Some(
                String(
                    "Charly",
                ),
            ),
            kind: Constant,
        },
        ASTVariable {
            identifier: "THE_NAME",
            infer_type: true,
            typehint: None,
            value: Some(
                String(
                    "Charly",
                ),
            ),
            kind: Constant,
        },
        ASTVariable {
            identifier: "v2",
            infer_type: false,
            typehint: None,
            value: Some(
                Call(
                    Identifier(
                        "Vector2",
                    ),
                    [
                        Number(
                            1,
                        ),
                        Number(
                            2,
                        ),
                    ],
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "v3",
            infer_type: false,
            typehint: None,
            value: Some(
                Call(
                    Identifier(
                        "Vector3",
                    ),
                    [
                        Number(
                            1,
                        ),
                        Number(
                            2,
                        ),
                        Number(
                            3,
                        ),
                    ],
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "i",
            infer_type: false,
            typehint: None,
            value: Some(
                Call(
                    Identifier(
                        "callme",
                    ),
                    [],
                ),
            ),
            kind: Regular,
        },
        ASTVariable {
            identifier: "hi",
            infer_type: false,
            typehint: None,
            value: Some(
                Call(
                    Identifier(
                        "callv",
                    ),
                    [
                        Call(
                            Identifier(
                                "callme",
                            ),
                            [],
                        ),
                    ],
                ),
            ),
            kind: Regular,
        },
    ],
    enums: [
        ASTEnum {
            identifier: None,
            variants: [
                ASTEnumVariant {
                    identifier: "UNIT_NEUTRAL",
                    value: None,
                },
                ASTEnumVariant {
                    identifier: "UNIT_ENEMY",
                    value: None,
                },
                ASTEnumVariant {
                    identifier: "UNIT_ALLY",
                    value: None,
                },
            ],
        },
        ASTEnum {
            identifier: Some(
                "Named",
            ),
            variants: [
                ASTEnumVariant {
                    identifier: "THING_1",
                    value: None,
                },
                ASTEnumVariant {
                    identifier: "THING_2",
                    value: None,
                },
                ASTEnumVariant {
                    identifier: "ANOTHER_THING",
                    value: Some(
                        -1,
                    ),
                },
            ],
        },
    ],
    functions: [
        ASTFunction {
            identifier: "some_function",
            parameters: [
                ASTFunctionParameter {
                    identifier: "param1",
                    infer_type: false,
                    typehint: None,
                    default: None,
                },
                ASTFunctionParameter {
                    identifier: "param2",
                    infer_type: false,
                    typehint: Some(
                        "int",
                    ),
                    default: None,
                },
                ASTFunctionParameter {
                    identifier: "param3",
                    infer_type: false,
                    typehint: None,
                    default: Some(
                        Number(
                            1,
                        ),
                    ),
                },
                ASTFunctionParameter {
                    identifier: "param4",
                    infer_type: false,
                    typehint: Some(
                        "int",
                    ),
                    default: Some(
                        Number(
                            1,
                        ),
                    ),
                },
                ASTFunctionParameter {
                    identifier: "param5",
                    infer_type: true,
                    typehint: None,
                    default: Some(
                        Number(
                            1,
                        ),
                    ),
                },
            ],
            body: [],
        },
    ],
}
