<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1126" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1109.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1109.00"> </text><svg id="frames" x="10" width="1180" total_samples="81"><g><title>`0x7FF8AD102690 (3 samples, 3.70%)</title><rect x="0.0000%" y="1061" width="3.7037%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1071.50">`0x7..</text></g><g><title>`0x7FF8AD102E27 (1 samples, 1.23%)</title><rect x="3.7037%" y="1029" width="1.2346%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="1"/><text x="3.9537%" y="1039.50"></text></g><g><title>`0x7FF8AD150A74 (1 samples, 1.23%)</title><rect x="3.7037%" y="1013" width="1.2346%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="3.9537%" y="1023.50"></text></g><g><title>`0x7FF8AD112168 (1 samples, 1.23%)</title><rect x="4.9383%" y="1013" width="1.2346%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="5.1883%" y="1023.50"></text></g><g><title>`0x7FF8AD0D0034 (1 samples, 1.23%)</title><rect x="4.9383%" y="997" width="1.2346%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="5.1883%" y="1007.50"></text></g><g><title>`0x7FF8AD0C2BD9 (1 samples, 1.23%)</title><rect x="4.9383%" y="981" width="1.2346%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="5.1883%" y="991.50"></text></g><g><title>`0x7FF8AD14FDF4 (1 samples, 1.23%)</title><rect x="4.9383%" y="965" width="1.2346%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="5.1883%" y="975.50"></text></g><g><title>`0x7FF8AD0E268F (1 samples, 1.23%)</title><rect x="6.1728%" y="965" width="1.2346%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="1"/><text x="6.4228%" y="975.50"></text></g><g><title>`0x7FF8AD0E26B7 (1 samples, 1.23%)</title><rect x="7.4074%" y="965" width="1.2346%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="7.6574%" y="975.50"></text></g><g><title>`0x7FF8AD0E26C3 (1 samples, 1.23%)</title><rect x="8.6420%" y="965" width="1.2346%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="1"/><text x="8.8920%" y="975.50"></text></g><g><title>`0x7FF8AD0E26C6 (1 samples, 1.23%)</title><rect x="9.8765%" y="965" width="1.2346%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="1"/><text x="10.1265%" y="975.50"></text></g><g><title>`0x7FF8AD0E26D7 (1 samples, 1.23%)</title><rect x="11.1111%" y="965" width="1.2346%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="1"/><text x="11.3611%" y="975.50"></text></g><g><title>`0x7FF8AD0E279B (2 samples, 2.47%)</title><rect x="12.3457%" y="965" width="2.4691%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="2"/><text x="12.5957%" y="975.50">`0..</text></g><g><title>`0x7FF8AD0E27DA (1 samples, 1.23%)</title><rect x="14.8148%" y="965" width="1.2346%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="1"/><text x="15.0648%" y="975.50"></text></g><g><title>`0x7FF8AD0E33D7 (1 samples, 1.23%)</title><rect x="14.8148%" y="949" width="1.2346%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="1"/><text x="15.0648%" y="959.50"></text></g><g><title>`0x7FF8AD0C8C6C (1 samples, 1.23%)</title><rect x="14.8148%" y="933" width="1.2346%" height="15" fill="rgb(231,73,38)" fg:x="12" fg:w="1"/><text x="15.0648%" y="943.50"></text></g><g><title>`0x7FF8AD0CAC3F (1 samples, 1.23%)</title><rect x="14.8148%" y="917" width="1.2346%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="1"/><text x="15.0648%" y="927.50"></text></g><g><title>`0x7FF8AD0CC309 (1 samples, 1.23%)</title><rect x="14.8148%" y="901" width="1.2346%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="1"/><text x="15.0648%" y="911.50"></text></g><g><title>`0x7FF8AD1541C4 (1 samples, 1.23%)</title><rect x="14.8148%" y="885" width="1.2346%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="1"/><text x="15.0648%" y="895.50"></text></g><g><title>`0x7FF8AD10EC38 (9 samples, 11.11%)</title><rect x="6.1728%" y="981" width="11.1111%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="9"/><text x="6.4228%" y="991.50">`0x7FF8AD10EC38</text></g><g><title>`0x7FF8AD0E288A (1 samples, 1.23%)</title><rect x="16.0494%" y="965" width="1.2346%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="16.2994%" y="975.50"></text></g><g><title>`0x7FF8AD0F7BAC (1 samples, 1.23%)</title><rect x="16.0494%" y="949" width="1.2346%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="1"/><text x="16.2994%" y="959.50"></text></g><g><title>`0x7FF8AD14D9E4 (1 samples, 1.23%)</title><rect x="16.0494%" y="933" width="1.2346%" height="15" fill="rgb(221,5,38)" fg:x="13" fg:w="1"/><text x="16.2994%" y="943.50"></text></g><g><title>`0x7FF8AD10EED1 (1 samples, 1.23%)</title><rect x="17.2840%" y="949" width="1.2346%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="17.5340%" y="959.50"></text></g><g><title>`0x7FF8AD10FFD2 (1 samples, 1.23%)</title><rect x="17.2840%" y="933" width="1.2346%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="17.5340%" y="943.50"></text></g><g><title>`0x7FF8AD0C15D0 (1 samples, 1.23%)</title><rect x="17.2840%" y="917" width="1.2346%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="17.5340%" y="927.50"></text></g><g><title>`0x7FF8AD0C17B1 (1 samples, 1.23%)</title><rect x="17.2840%" y="901" width="1.2346%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="17.5340%" y="911.50"></text></g><g><title>`0x7FF8AD11C751 (1 samples, 1.23%)</title><rect x="17.2840%" y="885" width="1.2346%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="17.5340%" y="895.50"></text></g><g><title>`0x7FF8AD11CF82 (1 samples, 1.23%)</title><rect x="17.2840%" y="869" width="1.2346%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="17.5340%" y="879.50"></text></g><g><title>`0x7FF8AD14D2C4 (1 samples, 1.23%)</title><rect x="17.2840%" y="853" width="1.2346%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="17.5340%" y="863.50"></text></g><g><title>`0x7FF8AD10F6E6 (3 samples, 3.70%)</title><rect x="17.2840%" y="965" width="3.7037%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="3"/><text x="17.5340%" y="975.50">`0x7..</text></g><g><title>`0x7FF8AD10F026 (2 samples, 2.47%)</title><rect x="18.5185%" y="949" width="2.4691%" height="15" fill="rgb(229,88,8)" fg:x="15" fg:w="2"/><text x="18.7685%" y="959.50">`0..</text></g><g><title>`0x7FF8AD10F207 (2 samples, 2.47%)</title><rect x="18.5185%" y="933" width="2.4691%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="2"/><text x="18.7685%" y="943.50">`0..</text></g><g><title>`0x7FF8AD10F37B (2 samples, 2.47%)</title><rect x="18.5185%" y="917" width="2.4691%" height="15" fill="rgb(254,191,54)" fg:x="15" fg:w="2"/><text x="18.7685%" y="927.50">`0..</text></g><g><title>`0x7FF8AD14D784 (2 samples, 2.47%)</title><rect x="18.5185%" y="901" width="2.4691%" height="15" fill="rgb(241,83,37)" fg:x="15" fg:w="2"/><text x="18.7685%" y="911.50">`0..</text></g><g><title>`0x7FF8AD0C4AAA (2 samples, 2.47%)</title><rect x="20.9877%" y="933" width="2.4691%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="2"/><text x="21.2377%" y="943.50">`0..</text></g><g><title>`0x7FF8AD0C4D42 (2 samples, 2.47%)</title><rect x="20.9877%" y="917" width="2.4691%" height="15" fill="rgb(226,3,54)" fg:x="17" fg:w="2"/><text x="21.2377%" y="927.50">`0..</text></g><g><title>`0x7FF8AD14D4E4 (2 samples, 2.47%)</title><rect x="20.9877%" y="901" width="2.4691%" height="15" fill="rgb(245,192,40)" fg:x="17" fg:w="2"/><text x="21.2377%" y="911.50">`0..</text></g><g><title>`0x7FF8AD1031BA (16 samples, 19.75%)</title><rect x="4.9383%" y="1029" width="19.7531%" height="15" fill="rgb(238,167,29)" fg:x="4" fg:w="16"/><text x="5.1883%" y="1039.50">`0x7FF8AD1031BA</text></g><g><title>`0x7FF8AD112230 (15 samples, 18.52%)</title><rect x="6.1728%" y="1013" width="18.5185%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="15"/><text x="6.4228%" y="1023.50">`0x7FF8AD112230</text></g><g><title>`0x7FF8AD10EBE3 (15 samples, 18.52%)</title><rect x="6.1728%" y="997" width="18.5185%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="15"/><text x="6.4228%" y="1007.50">`0x7FF8AD10EBE3</text></g><g><title>`0x7FF8AD10EC70 (6 samples, 7.41%)</title><rect x="17.2840%" y="981" width="7.4074%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="6"/><text x="17.5340%" y="991.50">`0x7FF8AD1..</text></g><g><title>`0x7FF8AD10F7B0 (3 samples, 3.70%)</title><rect x="20.9877%" y="965" width="3.7037%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="3"/><text x="21.2377%" y="975.50">`0x7..</text></g><g><title>`0x7FF8AD10FD53 (3 samples, 3.70%)</title><rect x="20.9877%" y="949" width="3.7037%" height="15" fill="rgb(213,116,39)" fg:x="17" fg:w="3"/><text x="21.2377%" y="959.50">`0x7..</text></g><g><title>`0x7FF8AD0C4C14 (1 samples, 1.23%)</title><rect x="23.4568%" y="933" width="1.2346%" height="15" fill="rgb(222,207,29)" fg:x="19" fg:w="1"/><text x="23.7068%" y="943.50"></text></g><g><title>`0x7FF8AD0C79D2 (1 samples, 1.23%)</title><rect x="23.4568%" y="917" width="1.2346%" height="15" fill="rgb(206,96,30)" fg:x="19" fg:w="1"/><text x="23.7068%" y="927.50"></text></g><g><title>`0x7FF8AD0C5096 (1 samples, 1.23%)</title><rect x="23.4568%" y="901" width="1.2346%" height="15" fill="rgb(218,138,4)" fg:x="19" fg:w="1"/><text x="23.7068%" y="911.50"></text></g><g><title>`0x7FF8AD10323C (1 samples, 1.23%)</title><rect x="24.6914%" y="1029" width="1.2346%" height="15" fill="rgb(250,191,14)" fg:x="20" fg:w="1"/><text x="24.9414%" y="1039.50"></text></g><g><title>`0x7FF8AD0DB44D (1 samples, 1.23%)</title><rect x="24.6914%" y="1013" width="1.2346%" height="15" fill="rgb(239,60,40)" fg:x="20" fg:w="1"/><text x="24.9414%" y="1023.50"></text></g><g><title>`0x7FF8AD0DD37A (1 samples, 1.23%)</title><rect x="24.6914%" y="997" width="1.2346%" height="15" fill="rgb(206,27,48)" fg:x="20" fg:w="1"/><text x="24.9414%" y="1007.50"></text></g><g><title>`0x7FF8AD0F4D2F (1 samples, 1.23%)</title><rect x="24.6914%" y="981" width="1.2346%" height="15" fill="rgb(225,35,8)" fg:x="20" fg:w="1"/><text x="24.9414%" y="991.50"></text></g><g><title>`0x7FF8AD0F4B80 (1 samples, 1.23%)</title><rect x="24.6914%" y="965" width="1.2346%" height="15" fill="rgb(250,213,24)" fg:x="20" fg:w="1"/><text x="24.9414%" y="975.50"></text></g><g><title>`0x7FF8AD0F4810 (1 samples, 1.23%)</title><rect x="24.6914%" y="949" width="1.2346%" height="15" fill="rgb(247,123,22)" fg:x="20" fg:w="1"/><text x="24.9414%" y="959.50"></text></g><g><title>`0x7FF8AD0F4739 (1 samples, 1.23%)</title><rect x="24.6914%" y="933" width="1.2346%" height="15" fill="rgb(231,138,38)" fg:x="20" fg:w="1"/><text x="24.9414%" y="943.50"></text></g><g><title>`0x7FF8AD0F38C0 (1 samples, 1.23%)</title><rect x="24.6914%" y="917" width="1.2346%" height="15" fill="rgb(231,145,46)" fg:x="20" fg:w="1"/><text x="24.9414%" y="927.50"></text></g><g><title>`0x7FF8AD12CC72 (1 samples, 1.23%)</title><rect x="24.6914%" y="901" width="1.2346%" height="15" fill="rgb(251,118,11)" fg:x="20" fg:w="1"/><text x="24.9414%" y="911.50"></text></g><g><title>`0x7FF8AD14D224 (1 samples, 1.23%)</title><rect x="24.6914%" y="885" width="1.2346%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="1"/><text x="24.9414%" y="895.50"></text></g><g><title>`0x7FF8AACFE473 (1 samples, 1.23%)</title><rect x="25.9259%" y="1013" width="1.2346%" height="15" fill="rgb(247,81,37)" fg:x="21" fg:w="1"/><text x="26.1759%" y="1023.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::compat::init (1 samples, 1.23%)</title><rect x="25.9259%" y="997" width="1.2346%" height="15" fill="rgb(209,12,38)" fg:x="21" fg:w="1"/><text x="26.1759%" y="1007.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::compat::load_synch_functions (1 samples, 1.23%)</title><rect x="25.9259%" y="981" width="1.2346%" height="15" fill="rgb(227,1,9)" fg:x="21" fg:w="1"/><text x="26.1759%" y="991.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::compat::load_synch_functions::try_load (1 samples, 1.23%)</title><rect x="25.9259%" y="965" width="1.2346%" height="15" fill="rgb(248,47,43)" fg:x="21" fg:w="1"/><text x="26.1759%" y="975.50"></text></g><g><title>gdtk.exe`core::option::impl$40::branch (1 samples, 1.23%)</title><rect x="25.9259%" y="949" width="1.2346%" height="15" fill="rgb(221,10,30)" fg:x="21" fg:w="1"/><text x="26.1759%" y="959.50"></text></g><g><title>`0x7FF8AA8BE6E8 (1 samples, 1.23%)</title><rect x="25.9259%" y="933" width="1.2346%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="1"/><text x="26.1759%" y="943.50"></text></g><g><title>`0x7FF8AA8BF1E5 (1 samples, 1.23%)</title><rect x="25.9259%" y="917" width="1.2346%" height="15" fill="rgb(222,148,37)" fg:x="21" fg:w="1"/><text x="26.1759%" y="927.50"></text></g><g><title>`0x7FF8AD0C6544 (1 samples, 1.23%)</title><rect x="25.9259%" y="901" width="1.2346%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="1"/><text x="26.1759%" y="911.50"></text></g><g><title>`0x7FF8AD0CFB53 (1 samples, 1.23%)</title><rect x="27.1605%" y="901" width="1.2346%" height="15" fill="rgb(247,98,35)" fg:x="22" fg:w="1"/><text x="27.4105%" y="911.50"></text></g><g><title>`0x7FF8AD10ED1F (1 samples, 1.23%)</title><rect x="27.1605%" y="885" width="1.2346%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="27.4105%" y="895.50"></text></g><g><title>`0x7FF8AD10FA80 (1 samples, 1.23%)</title><rect x="27.1605%" y="869" width="1.2346%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="27.4105%" y="879.50"></text></g><g><title>`0x7FF8AD10FCFE (1 samples, 1.23%)</title><rect x="27.1605%" y="853" width="1.2346%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="27.4105%" y="863.50"></text></g><g><title>`0x7FF8AD14D924 (1 samples, 1.23%)</title><rect x="27.1605%" y="837" width="1.2346%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="27.4105%" y="847.50"></text></g><g><title>`0x7FF8AAD005A2 (2 samples, 2.47%)</title><rect x="27.1605%" y="997" width="2.4691%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="2"/><text x="27.4105%" y="1007.50">`0..</text></g><g><title>`0x7FF8AAD019C7 (2 samples, 2.47%)</title><rect x="27.1605%" y="981" width="2.4691%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="2"/><text x="27.4105%" y="991.50">`0..</text></g><g><title>`0x7FF8AACFC050 (2 samples, 2.47%)</title><rect x="27.1605%" y="965" width="2.4691%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="2"/><text x="27.4105%" y="975.50">`0..</text></g><g><title>`0x7FF8AA8C56B2 (2 samples, 2.47%)</title><rect x="27.1605%" y="949" width="2.4691%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="2"/><text x="27.4105%" y="959.50">`0..</text></g><g><title>`0x7FF8AD0C6AF4 (2 samples, 2.47%)</title><rect x="27.1605%" y="933" width="2.4691%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="2"/><text x="27.4105%" y="943.50">`0..</text></g><g><title>`0x7FF8AD0C73E4 (2 samples, 2.47%)</title><rect x="27.1605%" y="917" width="2.4691%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="2"/><text x="27.4105%" y="927.50">`0..</text></g><g><title>`0x7FF8AD0CFBAE (1 samples, 1.23%)</title><rect x="28.3951%" y="901" width="1.2346%" height="15" fill="rgb(249,43,39)" fg:x="23" fg:w="1"/><text x="28.6451%" y="911.50"></text></g><g><title>`0x7FF8AD0ED8FB (1 samples, 1.23%)</title><rect x="28.3951%" y="885" width="1.2346%" height="15" fill="rgb(209,38,44)" fg:x="23" fg:w="1"/><text x="28.6451%" y="895.50"></text></g><g><title>`0x7FF8AD0EDBB4 (1 samples, 1.23%)</title><rect x="28.3951%" y="869" width="1.2346%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="1"/><text x="28.6451%" y="879.50"></text></g><g><title>`0x7FF8AD0EDCBA (1 samples, 1.23%)</title><rect x="28.3951%" y="853" width="1.2346%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="1"/><text x="28.6451%" y="863.50"></text></g><g><title>`0x7FF8AD1235D8 (1 samples, 1.23%)</title><rect x="28.3951%" y="837" width="1.2346%" height="15" fill="rgb(211,96,35)" fg:x="23" fg:w="1"/><text x="28.6451%" y="847.50"></text></g><g><title>`0x7FF8AD14D964 (1 samples, 1.23%)</title><rect x="28.3951%" y="821" width="1.2346%" height="15" fill="rgb(253,215,40)" fg:x="23" fg:w="1"/><text x="28.6451%" y="831.50"></text></g><g><title>`0x7FF8AAD0045F (3 samples, 3.70%)</title><rect x="27.1605%" y="1013" width="3.7037%" height="15" fill="rgb(211,81,21)" fg:x="22" fg:w="3"/><text x="27.4105%" y="1023.50">`0x7..</text></g><g><title>`0x7FF8AAD005BC (1 samples, 1.23%)</title><rect x="29.6296%" y="997" width="1.2346%" height="15" fill="rgb(208,190,38)" fg:x="24" fg:w="1"/><text x="29.8796%" y="1007.50"></text></g><g><title>`0x7FF8AB9EE3BB (1 samples, 1.23%)</title><rect x="29.6296%" y="981" width="1.2346%" height="15" fill="rgb(235,213,38)" fg:x="24" fg:w="1"/><text x="29.8796%" y="991.50"></text></g><g><title>`0x7FF8AD10DA8D (1 samples, 1.23%)</title><rect x="29.6296%" y="965" width="1.2346%" height="15" fill="rgb(237,122,38)" fg:x="24" fg:w="1"/><text x="29.8796%" y="975.50"></text></g><g><title>`0x7FF8AD10DCDA (1 samples, 1.23%)</title><rect x="29.6296%" y="949" width="1.2346%" height="15" fill="rgb(244,218,35)" fg:x="24" fg:w="1"/><text x="29.8796%" y="959.50"></text></g><g><title>`0x7FF8AD0C9A1D (1 samples, 1.23%)</title><rect x="29.6296%" y="933" width="1.2346%" height="15" fill="rgb(240,68,47)" fg:x="24" fg:w="1"/><text x="29.8796%" y="943.50"></text></g><g><title>`0x7FF8AB81CFF9 (1 samples, 1.23%)</title><rect x="29.6296%" y="917" width="1.2346%" height="15" fill="rgb(210,16,53)" fg:x="24" fg:w="1"/><text x="29.8796%" y="927.50"></text></g><g><title>`0x7FF8AB81CE53 (1 samples, 1.23%)</title><rect x="29.6296%" y="901" width="1.2346%" height="15" fill="rgb(235,124,12)" fg:x="24" fg:w="1"/><text x="29.8796%" y="911.50"></text></g><g><title>`0x7FF8AB8200C0 (1 samples, 1.23%)</title><rect x="29.6296%" y="885" width="1.2346%" height="15" fill="rgb(224,169,11)" fg:x="24" fg:w="1"/><text x="29.8796%" y="895.50"></text></g><g><title>gdtk.exe`core::ptr::drop_in_place&lt;tokio::runtime::blocking::pool::BlockingPool&gt; (1 samples, 1.23%)</title><rect x="30.8642%" y="789" width="1.2346%" height="15" fill="rgb(250,166,2)" fg:x="25" fg:w="1"/><text x="31.1142%" y="799.50"></text></g><g><title>gdtk.exe`core::ptr::drop_in_place (1 samples, 1.23%)</title><rect x="30.8642%" y="773" width="1.2346%" height="15" fill="rgb(242,216,29)" fg:x="25" fg:w="1"/><text x="31.1142%" y="783.50"></text></g><g><title>gdtk.exe`core::ptr::drop_in_place(alloc::sync::Arc (1 samples, 1.23%)</title><rect x="30.8642%" y="757" width="1.2346%" height="15" fill="rgb(230,116,27)" fg:x="25" fg:w="1"/><text x="31.1142%" y="767.50"></text></g><g><title>gdtk.exe`alloc::sync::impl$33::drop(alloc::sync::Arc (1 samples, 1.23%)</title><rect x="30.8642%" y="741" width="1.2346%" height="15" fill="rgb(228,99,48)" fg:x="25" fg:w="1"/><text x="31.1142%" y="751.50"></text></g><g><title>gdtk.exe`alloc::sync::Arc&lt;tokio::runtime::blocking::pool::Inner,alloc::alloc::Global&gt;::inner (1 samples, 1.23%)</title><rect x="30.8642%" y="725" width="1.2346%" height="15" fill="rgb(253,11,6)" fg:x="25" fg:w="1"/><text x="31.1142%" y="735.50"></text></g><g><title>gdtk.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;tokio::runtime::blocking::pool::Inner&gt; &gt;::as_ref (1 samples, 1.23%)</title><rect x="30.8642%" y="709" width="1.2346%" height="15" fill="rgb(247,143,39)" fg:x="25" fg:w="1"/><text x="31.1142%" y="719.50"></text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::BlockingPool::shutdown(enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="30.8642%" y="693" width="1.2346%" height="15" fill="rgb(236,97,10)" fg:x="25" fg:w="1"/><text x="31.1142%" y="703.50"></text></g><g><title>gdtk.exe`std::thread::JoinInner&lt;tuple$&lt;&gt; &gt;::join&lt;tuple$&lt;&gt; &gt;(std::thread::JoinInner&lt;tuple$ (1 samples, 1.23%)</title><rect x="30.8642%" y="677" width="1.2346%" height="15" fill="rgb(233,208,19)" fg:x="25" fg:w="1"/><text x="31.1142%" y="687.50"></text></g><g><title>gdtk.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::get_mut (1 samples, 1.23%)</title><rect x="30.8642%" y="661" width="1.2346%" height="15" fill="rgb(216,164,2)" fg:x="25" fg:w="1"/><text x="31.1142%" y="671.50"></text></g><g><title>gdtk.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::is_unique (1 samples, 1.23%)</title><rect x="30.8642%" y="645" width="1.2346%" height="15" fill="rgb(220,129,5)" fg:x="25" fg:w="1"/><text x="31.1142%" y="655.50"></text></g><g><title>gdtk.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (1 samples, 1.23%)</title><rect x="30.8642%" y="629" width="1.2346%" height="15" fill="rgb(242,17,10)" fg:x="25" fg:w="1"/><text x="31.1142%" y="639.50"></text></g><g><title>gdtk.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (1 samples, 1.23%)</title><rect x="30.8642%" y="613" width="1.2346%" height="15" fill="rgb(242,107,0)" fg:x="25" fg:w="1"/><text x="31.1142%" y="623.50"></text></g><g><title>`0x7FF8AA8C6785 (1 samples, 1.23%)</title><rect x="30.8642%" y="597" width="1.2346%" height="15" fill="rgb(251,28,31)" fg:x="25" fg:w="1"/><text x="31.1142%" y="607.50"></text></g><g><title>`0x7FF8AD14D1C4 (1 samples, 1.23%)</title><rect x="30.8642%" y="581" width="1.2346%" height="15" fill="rgb(233,223,10)" fg:x="25" fg:w="1"/><text x="31.1142%" y="591.50"></text></g><g><title>gdtk.exe`enum2$&lt;core::option::Option&lt;usize&gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option&lt;usize&gt; &gt;, unsigned long long (*) (1 samples, 1.23%)</title><rect x="32.0988%" y="741" width="1.2346%" height="15" fill="rgb(215,21,27)" fg:x="26" fg:w="1"/><text x="32.3488%" y="751.50"></text></g><g><title>gdtk.exe`core::ops::function::FnOnce::call_once(unsigned long long (*) (1 samples, 1.23%)</title><rect x="32.0988%" y="725" width="1.2346%" height="15" fill="rgb(232,23,21)" fg:x="26" fg:w="1"/><text x="32.3488%" y="735.50"></text></g><g><title>gdtk.exe`tokio::loom::std::sys::num_cpus (1 samples, 1.23%)</title><rect x="32.0988%" y="709" width="1.2346%" height="15" fill="rgb(244,5,23)" fg:x="26" fg:w="1"/><text x="32.3488%" y="719.50"></text></g><g><title>gdtk.exe`std::env::var(ref$ (1 samples, 1.23%)</title><rect x="32.0988%" y="693" width="1.2346%" height="15" fill="rgb(226,81,46)" fg:x="26" fg:w="1"/><text x="32.3488%" y="703.50"></text></g><g><title>gdtk.exe`std::env::_var (1 samples, 1.23%)</title><rect x="32.0988%" y="677" width="1.2346%" height="15" fill="rgb(247,70,30)" fg:x="26" fg:w="1"/><text x="32.3488%" y="687.50"></text></g><g><title>gdtk.exe`std::env::_var_os (1 samples, 1.23%)</title><rect x="32.0988%" y="661" width="1.2346%" height="15" fill="rgb(212,68,19)" fg:x="26" fg:w="1"/><text x="32.3488%" y="671.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::os::getenv (1 samples, 1.23%)</title><rect x="32.0988%" y="645" width="1.2346%" height="15" fill="rgb(240,187,13)" fg:x="26" fg:w="1"/><text x="32.3488%" y="655.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 1.23%)</title><rect x="32.0988%" y="629" width="1.2346%" height="15" fill="rgb(223,113,26)" fg:x="26" fg:w="1"/><text x="32.3488%" y="639.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::os::getenv::closure$0 (1 samples, 1.23%)</title><rect x="32.0988%" y="613" width="1.2346%" height="15" fill="rgb(206,192,2)" fg:x="26" fg:w="1"/><text x="32.3488%" y="623.50"></text></g><g><title>`0x7FF8AA8C5470 (1 samples, 1.23%)</title><rect x="32.0988%" y="597" width="1.2346%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="1"/><text x="32.3488%" y="607.50"></text></g><g><title>`0x7FF8AD0C57E0 (1 samples, 1.23%)</title><rect x="32.0988%" y="581" width="1.2346%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="1"/><text x="32.3488%" y="591.50"></text></g><g><title>gdtk.exe`core::option::impl$5::clone(enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="33.3333%" y="661" width="1.2346%" height="15" fill="rgb(224,114,35)" fg:x="27" fg:w="1"/><text x="33.5833%" y="671.50"></text></g><g><title>gdtk.exe`tokio::runtime::blocking::shutdown::impl$2::clone (1 samples, 1.23%)</title><rect x="33.3333%" y="645" width="1.2346%" height="15" fill="rgb(245,159,27)" fg:x="27" fg:w="1"/><text x="33.5833%" y="655.50"></text></g><g><title>gdtk.exe`alloc::sync::impl$28::clone(alloc::sync::Arc&lt;tokio::sync::oneshot::Sender&lt;tuple$ (1 samples, 1.23%)</title><rect x="33.3333%" y="629" width="1.2346%" height="15" fill="rgb(245,172,44)" fg:x="27" fg:w="1"/><text x="33.5833%" y="639.50"></text></g><g><title>gdtk.exe`enum2$&lt;core::result::Result&lt;tokio::runtime::runtime::Runtime,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tokio::runtime::runtime::Runtime,std::io::error::Error&gt; &gt;, ref$ (3 samples, 3.70%)</title><rect x="32.0988%" y="789" width="3.7037%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="3"/><text x="32.3488%" y="799.50">gdtk..</text></g><g><title>gdtk.exe`tokio::runtime::builder::Builder::build (3 samples, 3.70%)</title><rect x="32.0988%" y="773" width="3.7037%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="3"/><text x="32.3488%" y="783.50">gdtk..</text></g><g><title>gdtk.exe`tokio::runtime::builder::Builder::build_threaded_runtime (3 samples, 3.70%)</title><rect x="32.0988%" y="757" width="3.7037%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="3"/><text x="32.3488%" y="767.50">gdtk..</text></g><g><title>gdtk.exe`tokio::runtime::scheduler::multi_thread::worker::Launch::launch (2 samples, 2.47%)</title><rect x="33.3333%" y="741" width="2.4691%" height="15" fill="rgb(244,70,9)" fg:x="27" fg:w="2"/><text x="33.5833%" y="751.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::spawn_blocking (2 samples, 2.47%)</title><rect x="33.3333%" y="725" width="2.4691%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="2"/><text x="33.5833%" y="735.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::handle::Handle::spawn_blocking (2 samples, 2.47%)</title><rect x="33.3333%" y="709" width="2.4691%" height="15" fill="rgb(235,36,10)" fg:x="27" fg:w="2"/><text x="33.5833%" y="719.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::Spawner::spawn_blocking (2 samples, 2.47%)</title><rect x="33.3333%" y="693" width="2.4691%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="2"/><text x="33.5833%" y="703.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::Spawner::spawn_task (2 samples, 2.47%)</title><rect x="33.3333%" y="677" width="2.4691%" height="15" fill="rgb(221,13,13)" fg:x="27" fg:w="2"/><text x="33.5833%" y="687.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::Spawner::spawn_thread (1 samples, 1.23%)</title><rect x="34.5679%" y="661" width="1.2346%" height="15" fill="rgb(238,131,9)" fg:x="28" fg:w="1"/><text x="34.8179%" y="671.50"></text></g><g><title>gdtk.exe`std::thread::Builder::spawn (1 samples, 1.23%)</title><rect x="34.5679%" y="645" width="1.2346%" height="15" fill="rgb(211,50,8)" fg:x="28" fg:w="1"/><text x="34.8179%" y="655.50"></text></g><g><title>gdtk.exe`std::thread::Builder::spawn_unchecked (1 samples, 1.23%)</title><rect x="34.5679%" y="629" width="1.2346%" height="15" fill="rgb(245,182,24)" fg:x="28" fg:w="1"/><text x="34.8179%" y="639.50"></text></g><g><title>gdtk.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 1.23%)</title><rect x="34.5679%" y="613" width="1.2346%" height="15" fill="rgb(242,14,37)" fg:x="28" fg:w="1"/><text x="34.8179%" y="623.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::thread::Thread::new (1 samples, 1.23%)</title><rect x="34.5679%" y="597" width="1.2346%" height="15" fill="rgb(246,228,12)" fg:x="28" fg:w="1"/><text x="34.8179%" y="607.50"></text></g><g><title>gdtk.exe`core::convert::impl$6::try_into (1 samples, 1.23%)</title><rect x="34.5679%" y="581" width="1.2346%" height="15" fill="rgb(213,55,15)" fg:x="28" fg:w="1"/><text x="34.8179%" y="591.50"></text></g><g><title>gdtk.exe`std::os::windows::io::handle::impl$9::try_from (1 samples, 1.23%)</title><rect x="34.5679%" y="565" width="1.2346%" height="15" fill="rgb(209,9,3)" fg:x="28" fg:w="1"/><text x="34.8179%" y="575.50"></text></g><g><title>`0x7FF8AAF4360A (1 samples, 1.23%)</title><rect x="35.8025%" y="517" width="1.2346%" height="15" fill="rgb(230,59,30)" fg:x="29" fg:w="1"/><text x="36.0525%" y="527.50"></text></g><g><title>`0x7FF8AAF451DE (1 samples, 1.23%)</title><rect x="35.8025%" y="501" width="1.2346%" height="15" fill="rgb(209,121,21)" fg:x="29" fg:w="1"/><text x="36.0525%" y="511.50"></text></g><g><title>`0x7FF8AAF44F88 (1 samples, 1.23%)</title><rect x="35.8025%" y="485" width="1.2346%" height="15" fill="rgb(220,109,13)" fg:x="29" fg:w="1"/><text x="36.0525%" y="495.50"></text></g><g><title>`0x7FF8AAF46F25 (1 samples, 1.23%)</title><rect x="35.8025%" y="469" width="1.2346%" height="15" fill="rgb(232,18,1)" fg:x="29" fg:w="1"/><text x="36.0525%" y="479.50"></text></g><g><title>`0x7FF8AD14D0C4 (1 samples, 1.23%)</title><rect x="35.8025%" y="453" width="1.2346%" height="15" fill="rgb(215,41,42)" fg:x="29" fg:w="1"/><text x="36.0525%" y="463.50"></text></g><g><title>gdtk.exe`tokio::runtime::builder::Builder::enable_all (2 samples, 2.47%)</title><rect x="35.8025%" y="789" width="2.4691%" height="15" fill="rgb(224,123,36)" fg:x="29" fg:w="2"/><text x="36.0525%" y="799.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::builder::Builder::enable_io (2 samples, 2.47%)</title><rect x="35.8025%" y="773" width="2.4691%" height="15" fill="rgb(240,125,3)" fg:x="29" fg:w="2"/><text x="36.0525%" y="783.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::builder::Builder::new (2 samples, 2.47%)</title><rect x="35.8025%" y="757" width="2.4691%" height="15" fill="rgb(205,98,50)" fg:x="29" fg:w="2"/><text x="36.0525%" y="767.50">gd..</text></g><g><title>gdtk.exe`tokio::util::rand::RngSeed::new (2 samples, 2.47%)</title><rect x="35.8025%" y="741" width="2.4691%" height="15" fill="rgb(205,185,37)" fg:x="29" fg:w="2"/><text x="36.0525%" y="751.50">gd..</text></g><g><title>gdtk.exe`tokio::loom::std::rand::seed (2 samples, 2.47%)</title><rect x="35.8025%" y="725" width="2.4691%" height="15" fill="rgb(238,207,15)" fg:x="29" fg:w="2"/><text x="36.0525%" y="735.50">gd..</text></g><g><title>gdtk.exe`std::hash::random::RandomState::new (2 samples, 2.47%)</title><rect x="35.8025%" y="709" width="2.4691%" height="15" fill="rgb(213,199,42)" fg:x="29" fg:w="2"/><text x="36.0525%" y="719.50">gd..</text></g><g><title>gdtk.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (2 samples, 2.47%)</title><rect x="35.8025%" y="693" width="2.4691%" height="15" fill="rgb(235,201,11)" fg:x="29" fg:w="2"/><text x="36.0525%" y="703.50">gd..</text></g><g><title>gdtk.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (2 samples, 2.47%)</title><rect x="35.8025%" y="677" width="2.4691%" height="15" fill="rgb(207,46,11)" fg:x="29" fg:w="2"/><text x="36.0525%" y="687.50">gd..</text></g><g><title>gdtk.exe`std::hash::random::impl$0::new::closure$0(std::hash::random::impl$0::new::closure_env$0, core::cell::Cell&lt;tuple$ (2 samples, 2.47%)</title><rect x="35.8025%" y="661" width="2.4691%" height="15" fill="rgb(241,35,35)" fg:x="29" fg:w="2"/><text x="36.0525%" y="671.50">gd..</text></g><g><title>gdtk.exe`core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;::get (2 samples, 2.47%)</title><rect x="35.8025%" y="645" width="2.4691%" height="15" fill="rgb(243,32,47)" fg:x="29" fg:w="2"/><text x="36.0525%" y="655.50">gd..</text></g><g><title>gdtk.exe`std::sys::pal::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::hash::random::impl$0::new::KEYS::__getit::closure_env$0&gt; (2 samples, 2.47%)</title><rect x="35.8025%" y="629" width="2.4691%" height="15" fill="rgb(247,202,23)" fg:x="29" fg:w="2"/><text x="36.0525%" y="639.50">gd..</text></g><g><title>gdtk.exe`std::sys::pal::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (2 samples, 2.47%)</title><rect x="35.8025%" y="613" width="2.4691%" height="15" fill="rgb(219,102,11)" fg:x="29" fg:w="2"/><text x="36.0525%" y="623.50">gd..</text></g><g><title>gdtk.exe`std::hash::random::impl$0::new::KEYS::__getit::closure$0 (2 samples, 2.47%)</title><rect x="35.8025%" y="597" width="2.4691%" height="15" fill="rgb(243,110,44)" fg:x="29" fg:w="2"/><text x="36.0525%" y="607.50">gd..</text></g><g><title>gdtk.exe`std::hash::random::impl$0::new::KEYS::__init (2 samples, 2.47%)</title><rect x="35.8025%" y="581" width="2.4691%" height="15" fill="rgb(222,74,54)" fg:x="29" fg:w="2"/><text x="36.0525%" y="591.50">gd..</text></g><g><title>gdtk.exe`std::sys::pal::windows::rand::hashmap_random_keys (2 samples, 2.47%)</title><rect x="35.8025%" y="565" width="2.4691%" height="15" fill="rgb(216,99,12)" fg:x="29" fg:w="2"/><text x="36.0525%" y="575.50">gd..</text></g><g><title>gdtk.exe`std::sys::pal::windows::c::nt_success (2 samples, 2.47%)</title><rect x="35.8025%" y="549" width="2.4691%" height="15" fill="rgb(226,22,26)" fg:x="29" fg:w="2"/><text x="36.0525%" y="559.50">gd..</text></g><g><title>`0x7FF8AAF43559 (2 samples, 2.47%)</title><rect x="35.8025%" y="533" width="2.4691%" height="15" fill="rgb(217,163,10)" fg:x="29" fg:w="2"/><text x="36.0525%" y="543.50">`0..</text></g><g><title>`0x7FF8AAF43642 (1 samples, 1.23%)</title><rect x="37.0370%" y="517" width="1.2346%" height="15" fill="rgb(213,25,53)" fg:x="30" fg:w="1"/><text x="37.2870%" y="527.50"></text></g><g><title>`0x7FF8AAF46435 (1 samples, 1.23%)</title><rect x="37.0370%" y="501" width="1.2346%" height="15" fill="rgb(252,105,26)" fg:x="30" fg:w="1"/><text x="37.2870%" y="511.50"></text></g><g><title>`0x7FF8AAF41E98 (1 samples, 1.23%)</title><rect x="37.0370%" y="485" width="1.2346%" height="15" fill="rgb(220,39,43)" fg:x="30" fg:w="1"/><text x="37.2870%" y="495.50"></text></g><g><title>`0x7FF8AAF42199 (1 samples, 1.23%)</title><rect x="37.0370%" y="469" width="1.2346%" height="15" fill="rgb(229,68,48)" fg:x="30" fg:w="1"/><text x="37.2870%" y="479.50"></text></g><g><title>`0x7FF8AA8C56B2 (1 samples, 1.23%)</title><rect x="37.0370%" y="453" width="1.2346%" height="15" fill="rgb(252,8,32)" fg:x="30" fg:w="1"/><text x="37.2870%" y="463.50"></text></g><g><title>`0x7FF8AD0C6AF4 (1 samples, 1.23%)</title><rect x="37.0370%" y="437" width="1.2346%" height="15" fill="rgb(223,20,43)" fg:x="30" fg:w="1"/><text x="37.2870%" y="447.50"></text></g><g><title>`0x7FF8AD0C73E4 (1 samples, 1.23%)</title><rect x="37.0370%" y="421" width="1.2346%" height="15" fill="rgb(229,81,49)" fg:x="30" fg:w="1"/><text x="37.2870%" y="431.50"></text></g><g><title>`0x7FF8AD0CFB31 (1 samples, 1.23%)</title><rect x="37.0370%" y="405" width="1.2346%" height="15" fill="rgb(236,28,36)" fg:x="30" fg:w="1"/><text x="37.2870%" y="415.50"></text></g><g><title>`0x7FF8AD11B2BD (1 samples, 1.23%)</title><rect x="37.0370%" y="389" width="1.2346%" height="15" fill="rgb(249,185,26)" fg:x="30" fg:w="1"/><text x="37.2870%" y="399.50"></text></g><g><title>`0x7FF8AD0C4479 (1 samples, 1.23%)</title><rect x="37.0370%" y="373" width="1.2346%" height="15" fill="rgb(249,174,33)" fg:x="30" fg:w="1"/><text x="37.2870%" y="383.50"></text></g><g><title>`0x7FF8AD0C4C14 (1 samples, 1.23%)</title><rect x="37.0370%" y="357" width="1.2346%" height="15" fill="rgb(233,201,37)" fg:x="30" fg:w="1"/><text x="37.2870%" y="367.50"></text></g><g><title>`0x7FF8AD0C79D2 (1 samples, 1.23%)</title><rect x="37.0370%" y="341" width="1.2346%" height="15" fill="rgb(221,78,26)" fg:x="30" fg:w="1"/><text x="37.2870%" y="351.50"></text></g><g><title>`0x7FF8AD0C5096 (1 samples, 1.23%)</title><rect x="37.0370%" y="325" width="1.2346%" height="15" fill="rgb(250,127,30)" fg:x="30" fg:w="1"/><text x="37.2870%" y="335.50"></text></g><g><title>gdtk.exe`gdtk::cli::cli (1 samples, 1.23%)</title><rect x="38.2716%" y="629" width="1.2346%" height="15" fill="rgb(230,49,44)" fg:x="31" fg:w="1"/><text x="38.5216%" y="639.50"></text></g><g><title>gdtk.exe`clap_builder::derive::Parser::parse (1 samples, 1.23%)</title><rect x="38.2716%" y="613" width="1.2346%" height="15" fill="rgb(229,67,23)" fg:x="31" fg:w="1"/><text x="38.5216%" y="623.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::get_matches (1 samples, 1.23%)</title><rect x="38.2716%" y="597" width="1.2346%" height="15" fill="rgb(249,83,47)" fg:x="31" fg:w="1"/><text x="38.5216%" y="607.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::get_matches_from (1 samples, 1.23%)</title><rect x="38.2716%" y="581" width="1.2346%" height="15" fill="rgb(215,43,3)" fg:x="31" fg:w="1"/><text x="38.5216%" y="591.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 1.23%)</title><rect x="38.2716%" y="565" width="1.2346%" height="15" fill="rgb(238,154,13)" fg:x="31" fg:w="1"/><text x="38.5216%" y="575.50"></text></g><g><title>gdtk.exe`core::ptr::drop_in_place (1 samples, 1.23%)</title><rect x="38.2716%" y="549" width="1.2346%" height="15" fill="rgb(219,56,2)" fg:x="31" fg:w="1"/><text x="38.5216%" y="559.50"></text></g><g><title>gdtk.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 1.23%)</title><rect x="38.2716%" y="533" width="1.2346%" height="15" fill="rgb(233,0,4)" fg:x="31" fg:w="1"/><text x="38.5216%" y="543.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 1.23%)</title><rect x="38.2716%" y="517" width="1.2346%" height="15" fill="rgb(235,30,7)" fg:x="31" fg:w="1"/><text x="38.5216%" y="527.50"></text></g><g><title>gdtk.exe`clap_builder::parser::arg_matcher::ArgMatcher::new (1 samples, 1.23%)</title><rect x="38.2716%" y="501" width="1.2346%" height="15" fill="rgb(250,79,13)" fg:x="31" fg:w="1"/><text x="38.5216%" y="511.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::_build_self (1 samples, 1.23%)</title><rect x="38.2716%" y="485" width="1.2346%" height="15" fill="rgb(211,146,34)" fg:x="31" fg:w="1"/><text x="38.5216%" y="495.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::_check_help_and_version (1 samples, 1.23%)</title><rect x="38.2716%" y="469" width="1.2346%" height="15" fill="rgb(228,22,38)" fg:x="31" fg:w="1"/><text x="38.5216%" y="479.50"></text></g><g><title>gdtk.exe`clap_builder::builder::arg::Arg::new(ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="453" width="1.2346%" height="15" fill="rgb(235,168,5)" fg:x="31" fg:w="1"/><text x="38.5216%" y="463.50"></text></g><g><title>gdtk.exe`clap_builder::builder::arg::Arg::id(clap_builder::builder::arg::Arg, ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="437" width="1.2346%" height="15" fill="rgb(221,155,16)" fg:x="31" fg:w="1"/><text x="38.5216%" y="447.50"></text></g><g><title>gdtk.exe`clap_builder::builder::command::Command::about&lt;ref$&lt;str$&gt; &gt;(clap_builder::builder::command::Command, ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="421" width="1.2346%" height="15" fill="rgb(215,215,53)" fg:x="31" fg:w="1"/><text x="38.5216%" y="431.50"></text></g><g><title>gdtk.exe`clap_builder::builder::resettable::impl$19::into_resettable(ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="405" width="1.2346%" height="15" fill="rgb(223,4,10)" fg:x="31" fg:w="1"/><text x="38.5216%" y="415.50"></text></g><g><title>gdtk.exe`core::convert::impl$3::into(ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="389" width="1.2346%" height="15" fill="rgb(234,103,6)" fg:x="31" fg:w="1"/><text x="38.5216%" y="399.50"></text></g><g><title>gdtk.exe`clap_builder::builder::styled_str::impl$4::from(ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="373" width="1.2346%" height="15" fill="rgb(227,97,0)" fg:x="31" fg:w="1"/><text x="38.5216%" y="383.50"></text></g><g><title>gdtk.exe`clap_builder::builder::styled_str::StyledStr::push_str(ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="357" width="1.2346%" height="15" fill="rgb(234,150,53)" fg:x="31" fg:w="1"/><text x="38.5216%" y="367.50"></text></g><g><title>gdtk.exe`alloc::string::String::push_str(ref$ (1 samples, 1.23%)</title><rect x="38.2716%" y="341" width="1.2346%" height="15" fill="rgb(228,201,54)" fg:x="31" fg:w="1"/><text x="38.5216%" y="351.50"></text></g><g><title>gdtk.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (1 samples, 1.23%)</title><rect x="38.2716%" y="325" width="1.2346%" height="15" fill="rgb(222,22,37)" fg:x="31" fg:w="1"/><text x="38.5216%" y="335.50"></text></g><g><title>gdtk.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (1 samples, 1.23%)</title><rect x="38.2716%" y="309" width="1.2346%" height="15" fill="rgb(237,53,32)" fg:x="31" fg:w="1"/><text x="38.5216%" y="319.50"></text></g><g><title>gdtk.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (1 samples, 1.23%)</title><rect x="38.2716%" y="293" width="1.2346%" height="15" fill="rgb(233,25,53)" fg:x="31" fg:w="1"/><text x="38.5216%" y="303.50"></text></g><g><title>gdtk.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 1.23%)</title><rect x="38.2716%" y="277" width="1.2346%" height="15" fill="rgb(210,40,34)" fg:x="31" fg:w="1"/><text x="38.5216%" y="287.50"></text></g><g><title>gdtk.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 1.23%)</title><rect x="38.2716%" y="261" width="1.2346%" height="15" fill="rgb(241,220,44)" fg:x="31" fg:w="1"/><text x="38.5216%" y="271.50"></text></g><g><title>gdtk.exe`alloc::raw_vec::impl$2::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (1 samples, 1.23%)</title><rect x="38.2716%" y="245" width="1.2346%" height="15" fill="rgb(235,28,35)" fg:x="31" fg:w="1"/><text x="38.5216%" y="255.50"></text></g><g><title>gdtk.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (1 samples, 1.23%)</title><rect x="38.2716%" y="229" width="1.2346%" height="15" fill="rgb(210,56,17)" fg:x="31" fg:w="1"/><text x="38.5216%" y="239.50"></text></g><g><title>gdtk.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 1.23%)</title><rect x="38.2716%" y="213" width="1.2346%" height="15" fill="rgb(224,130,29)" fg:x="31" fg:w="1"/><text x="38.5216%" y="223.50"></text></g><g><title>gdtk.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 1.23%)</title><rect x="38.2716%" y="197" width="1.2346%" height="15" fill="rgb(235,212,8)" fg:x="31" fg:w="1"/><text x="38.5216%" y="207.50"></text></g><g><title>gdtk.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 1.23%)</title><rect x="38.2716%" y="181" width="1.2346%" height="15" fill="rgb(223,33,50)" fg:x="31" fg:w="1"/><text x="38.5216%" y="191.50"></text></g><g><title>`0x7FF8AD0DB3C7 (1 samples, 1.23%)</title><rect x="38.2716%" y="165" width="1.2346%" height="15" fill="rgb(219,149,13)" fg:x="31" fg:w="1"/><text x="38.5216%" y="175.50"></text></g><g><title>`0x7FF8AD0DBEDA (1 samples, 1.23%)</title><rect x="38.2716%" y="149" width="1.2346%" height="15" fill="rgb(250,156,29)" fg:x="31" fg:w="1"/><text x="38.5216%" y="159.50"></text></g><g><title>`0x7FF8AD0D0B31 (1 samples, 1.23%)</title><rect x="38.2716%" y="133" width="1.2346%" height="15" fill="rgb(216,193,19)" fg:x="31" fg:w="1"/><text x="38.5216%" y="143.50"></text></g><g><title>`0x7FF8AD0CF44F (1 samples, 1.23%)</title><rect x="38.2716%" y="117" width="1.2346%" height="15" fill="rgb(216,135,14)" fg:x="31" fg:w="1"/><text x="38.5216%" y="127.50"></text></g><g><title>`0x7FF8AD0DB44D (1 samples, 1.23%)</title><rect x="38.2716%" y="101" width="1.2346%" height="15" fill="rgb(241,47,5)" fg:x="31" fg:w="1"/><text x="38.5216%" y="111.50"></text></g><g><title>`0x7FF8AD0DDBFA (1 samples, 1.23%)</title><rect x="38.2716%" y="85" width="1.2346%" height="15" fill="rgb(233,42,35)" fg:x="31" fg:w="1"/><text x="38.5216%" y="95.50"></text></g><g><title>`0x7FF8AD0BE37B (1 samples, 1.23%)</title><rect x="38.2716%" y="69" width="1.2346%" height="15" fill="rgb(231,13,6)" fg:x="31" fg:w="1"/><text x="38.5216%" y="79.50"></text></g><g><title>`0x7FF8AD0BE7DE (1 samples, 1.23%)</title><rect x="38.2716%" y="53" width="1.2346%" height="15" fill="rgb(207,181,40)" fg:x="31" fg:w="1"/><text x="38.5216%" y="63.50"></text></g><g><title>`0x7FF8AD0BE92D (1 samples, 1.23%)</title><rect x="38.2716%" y="37" width="1.2346%" height="15" fill="rgb(254,173,49)" fg:x="31" fg:w="1"/><text x="38.5216%" y="47.50"></text></g><g><title>gdtk.exe`core::clone::Clone::clone(tuple$&lt;alloc::vec::Vec&lt;gdtk_lexer::token::Token,alloc::alloc::Global&gt;,alloc::vec::Vec (1 samples, 1.23%)</title><rect x="39.5062%" y="613" width="1.2346%" height="15" fill="rgb(221,1,38)" fg:x="32" fg:w="1"/><text x="39.7562%" y="623.50"></text></g><g><title>gdtk.exe`gdtk_lexer::lex(ref$ (1 samples, 1.23%)</title><rect x="39.5062%" y="597" width="1.2346%" height="15" fill="rgb(206,124,46)" fg:x="32" fg:w="1"/><text x="39.7562%" y="607.50"></text></g><g><title>gdtk.exe`gdtk_lexer::preprocess(logos::lexer::Lexer&lt;enum2$ (1 samples, 1.23%)</title><rect x="39.5062%" y="581" width="1.2346%" height="15" fill="rgb(249,21,11)" fg:x="32" fg:w="1"/><text x="39.7562%" y="591.50"></text></g><g><title>gdtk.exe`logos::lexer::impl$4::next(logos::lexer::SpannedIter&lt;enum2$ (1 samples, 1.23%)</title><rect x="39.5062%" y="565" width="1.2346%" height="15" fill="rgb(222,201,40)" fg:x="32" fg:w="1"/><text x="39.7562%" y="575.50"></text></g><g><title>gdtk.exe`logos::lexer::impl$3::next(logos::lexer::Lexer&lt;enum2$ (1 samples, 1.23%)</title><rect x="39.5062%" y="549" width="1.2346%" height="15" fill="rgb(235,61,29)" fg:x="32" fg:w="1"/><text x="39.7562%" y="559.50"></text></g><g><title>gdtk.exe`core::mem::manually_drop::ManuallyDrop&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;gdtk_lexer::token::TokenKind&gt;,gdtk_lexer::error::Error&gt; &gt; &gt; &gt; &gt;::take (1 samples, 1.23%)</title><rect x="39.5062%" y="533" width="1.2346%" height="15" fill="rgb(219,207,3)" fg:x="32" fg:w="1"/><text x="39.7562%" y="543.50"></text></g><g><title>gdtk.exe`core::ptr::read(enum2$&lt;core::option::Option&lt;enum2$&lt;core::result::Result&lt;enum2$ (1 samples, 1.23%)</title><rect x="39.5062%" y="517" width="1.2346%" height="15" fill="rgb(222,56,46)" fg:x="32" fg:w="1"/><text x="39.7562%" y="527.50"></text></g><g><title>gdtk.exe`gdtk_lexer::token::impl$3::lex::goto5274_ctx5073_x(logos::lexer::Lexer&lt;enum2$ (1 samples, 1.23%)</title><rect x="39.5062%" y="501" width="1.2346%" height="15" fill="rgb(239,76,54)" fg:x="32" fg:w="1"/><text x="39.7562%" y="511.50"></text></g><g><title>gdtk.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result (1 samples, 1.23%)</title><rect x="40.7407%" y="613" width="1.2346%" height="15" fill="rgb(231,124,27)" fg:x="33" fg:w="1"/><text x="40.9907%" y="623.50"></text></g><g><title>gdtk.exe`std::fs::read_to_string::inner (1 samples, 1.23%)</title><rect x="40.7407%" y="597" width="1.2346%" height="15" fill="rgb(249,195,6)" fg:x="33" fg:w="1"/><text x="40.9907%" y="607.50"></text></g><g><title>gdtk.exe`std::fs::File::open (1 samples, 1.23%)</title><rect x="40.7407%" y="581" width="1.2346%" height="15" fill="rgb(237,174,47)" fg:x="33" fg:w="1"/><text x="40.9907%" y="591.50"></text></g><g><title>gdtk.exe`std::fs::OpenOptions::open (1 samples, 1.23%)</title><rect x="40.7407%" y="565" width="1.2346%" height="15" fill="rgb(206,201,31)" fg:x="33" fg:w="1"/><text x="40.9907%" y="575.50"></text></g><g><title>gdtk.exe`std::fs::OpenOptions::_open (1 samples, 1.23%)</title><rect x="40.7407%" y="549" width="1.2346%" height="15" fill="rgb(231,57,52)" fg:x="33" fg:w="1"/><text x="40.9907%" y="559.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::fs::File::open (1 samples, 1.23%)</title><rect x="40.7407%" y="533" width="1.2346%" height="15" fill="rgb(248,177,22)" fg:x="33" fg:w="1"/><text x="40.9907%" y="543.50"></text></g><g><title>gdtk.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 1.23%)</title><rect x="40.7407%" y="517" width="1.2346%" height="15" fill="rgb(215,211,37)" fg:x="33" fg:w="1"/><text x="40.9907%" y="527.50"></text></g><g><title>`0x7FF8AA8C5FE6 (1 samples, 1.23%)</title><rect x="40.7407%" y="501" width="1.2346%" height="15" fill="rgb(241,128,51)" fg:x="33" fg:w="1"/><text x="40.9907%" y="511.50"></text></g><g><title>`0x7FF8AA8C6579 (1 samples, 1.23%)</title><rect x="40.7407%" y="485" width="1.2346%" height="15" fill="rgb(227,165,31)" fg:x="33" fg:w="1"/><text x="40.9907%" y="495.50"></text></g><g><title>`0x7FF8AD14DA84 (1 samples, 1.23%)</title><rect x="40.7407%" y="469" width="1.2346%" height="15" fill="rgb(228,167,24)" fg:x="33" fg:w="1"/><text x="40.9907%" y="479.50"></text></g><g><title>gdtk.exe`gdtk_parser::block::parse_block&lt;alloc::vec::into_iter::IntoIter&lt;gdtk_lexer::token::Token,alloc::alloc::Global&gt; &gt;(core::iter::adapters::peekable::Peekable&lt;alloc::vec::into_iter::IntoIter (1 samples, 1.23%)</title><rect x="41.9753%" y="565" width="1.2346%" height="15" fill="rgb(228,143,12)" fg:x="34" fg:w="1"/><text x="42.2253%" y="575.50"></text></g><g><title>gdtk.exe`gdtk_parser::statement::parse_statement(core::iter::adapters::peekable::Peekable&lt;alloc::vec::into_iter::IntoIter&lt;gdtk_lexer::token::Token,alloc::alloc::Global&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="41.9753%" y="549" width="1.2346%" height="15" fill="rgb(249,149,8)" fg:x="34" fg:w="1"/><text x="42.2253%" y="559.50"></text></g><g><title>gdtk.exe`core::fmt::Write::write_char&lt;std::io::Write::write_fmt::Adapter&lt;std::io::stdio::StderrLock&gt; &gt; (1 samples, 1.23%)</title><rect x="43.2099%" y="485" width="1.2346%" height="15" fill="rgb(243,35,44)" fg:x="35" fg:w="1"/><text x="43.4599%" y="495.50"></text></g><g><title>gdtk.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StderrLock&gt; (1 samples, 1.23%)</title><rect x="43.2099%" y="469" width="1.2346%" height="15" fill="rgb(246,89,9)" fg:x="35" fg:w="1"/><text x="43.4599%" y="479.50"></text></g><g><title>gdtk.exe`std::io::stdio::impl$19::write_all (1 samples, 1.23%)</title><rect x="43.2099%" y="453" width="1.2346%" height="15" fill="rgb(233,213,13)" fg:x="35" fg:w="1"/><text x="43.4599%" y="463.50"></text></g><g><title>gdtk.exe`std::io::stdio::impl$2::write_all (1 samples, 1.23%)</title><rect x="43.2099%" y="437" width="1.2346%" height="15" fill="rgb(233,141,41)" fg:x="35" fg:w="1"/><text x="43.4599%" y="447.50"></text></g><g><title>gdtk.exe`std::io::stdio::handle_ebadf (1 samples, 1.23%)</title><rect x="43.2099%" y="421" width="1.2346%" height="15" fill="rgb(239,167,4)" fg:x="35" fg:w="1"/><text x="43.4599%" y="431.50"></text></g><g><title>gdtk.exe`std::io::Write::write_all&lt;std::sys::pal::windows::stdio::Stderr&gt; (1 samples, 1.23%)</title><rect x="43.2099%" y="405" width="1.2346%" height="15" fill="rgb(209,217,16)" fg:x="35" fg:w="1"/><text x="43.4599%" y="415.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::stdio::write (1 samples, 1.23%)</title><rect x="43.2099%" y="389" width="1.2346%" height="15" fill="rgb(219,88,35)" fg:x="35" fg:w="1"/><text x="43.4599%" y="399.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::stdio::is_console (1 samples, 1.23%)</title><rect x="43.2099%" y="373" width="1.2346%" height="15" fill="rgb(220,193,23)" fg:x="35" fg:w="1"/><text x="43.4599%" y="383.50"></text></g><g><title>`0x7FF8AA8F16B0 (1 samples, 1.23%)</title><rect x="43.2099%" y="357" width="1.2346%" height="15" fill="rgb(230,90,52)" fg:x="35" fg:w="1"/><text x="43.4599%" y="367.50"></text></g><g><title>`0x7FF8AD14D0C4 (1 samples, 1.23%)</title><rect x="43.2099%" y="341" width="1.2346%" height="15" fill="rgb(252,106,19)" fg:x="35" fg:w="1"/><text x="43.4599%" y="351.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::stdio::is_console (1 samples, 1.23%)</title><rect x="44.4444%" y="389" width="1.2346%" height="15" fill="rgb(206,74,20)" fg:x="36" fg:w="1"/><text x="44.6944%" y="399.50"></text></g><g><title>`0x7FF8AA8F16B0 (1 samples, 1.23%)</title><rect x="44.4444%" y="373" width="1.2346%" height="15" fill="rgb(230,138,44)" fg:x="36" fg:w="1"/><text x="44.6944%" y="383.50"></text></g><g><title>`0x7FF8AD14D0C4 (1 samples, 1.23%)</title><rect x="44.4444%" y="357" width="1.2346%" height="15" fill="rgb(235,182,43)" fg:x="36" fg:w="1"/><text x="44.6944%" y="367.50"></text></g><g><title>gdtk.exe`__scrt_common_main_seh() (17 samples, 20.99%)</title><rect x="25.9259%" y="1029" width="20.9877%" height="15" fill="rgb(242,16,51)" fg:x="21" fg:w="17"/><text x="26.1759%" y="1039.50">gdtk.exe`__scrt_common_main_seh()</text></g><g><title>gdtk.exe`invoke_main() (13 samples, 16.05%)</title><rect x="30.8642%" y="1013" width="16.0494%" height="15" fill="rgb(248,9,4)" fg:x="25" fg:w="13"/><text x="31.1142%" y="1023.50">gdtk.exe`invoke_main()</text></g><g><title>gdtk.exe`main (13 samples, 16.05%)</title><rect x="30.8642%" y="997" width="16.0494%" height="15" fill="rgb(210,31,22)" fg:x="25" fg:w="13"/><text x="31.1142%" y="1007.50">gdtk.exe`main</text></g><g><title>gdtk.exe`std::rt::lang_start_internal (13 samples, 16.05%)</title><rect x="30.8642%" y="981" width="16.0494%" height="15" fill="rgb(239,54,39)" fg:x="25" fg:w="13"/><text x="31.1142%" y="991.50">gdtk.exe`std::rt::lang_st..</text></g><g><title>gdtk.exe`std::panic::catch_unwind (13 samples, 16.05%)</title><rect x="30.8642%" y="965" width="16.0494%" height="15" fill="rgb(230,99,41)" fg:x="25" fg:w="13"/><text x="31.1142%" y="975.50">gdtk.exe`std::panic::catc..</text></g><g><title>gdtk.exe`std::panicking::try (13 samples, 16.05%)</title><rect x="30.8642%" y="949" width="16.0494%" height="15" fill="rgb(253,106,12)" fg:x="25" fg:w="13"/><text x="31.1142%" y="959.50">gdtk.exe`std::panicking::..</text></g><g><title>gdtk.exe`std::panicking::try::do_call (13 samples, 16.05%)</title><rect x="30.8642%" y="933" width="16.0494%" height="15" fill="rgb(213,46,41)" fg:x="25" fg:w="13"/><text x="31.1142%" y="943.50">gdtk.exe`std::panicking::..</text></g><g><title>gdtk.exe`std::rt::lang_start_internal::closure$2 (13 samples, 16.05%)</title><rect x="30.8642%" y="917" width="16.0494%" height="15" fill="rgb(215,133,35)" fg:x="25" fg:w="13"/><text x="31.1142%" y="927.50">gdtk.exe`std::rt::lang_st..</text></g><g><title>gdtk.exe`std::panic::catch_unwind (13 samples, 16.05%)</title><rect x="30.8642%" y="901" width="16.0494%" height="15" fill="rgb(213,28,5)" fg:x="25" fg:w="13"/><text x="31.1142%" y="911.50">gdtk.exe`std::panic::catc..</text></g><g><title>gdtk.exe`core::ops::function::FnOnce::call_once&lt;std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;,tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (13 samples, 16.05%)</title><rect x="30.8642%" y="885" width="16.0494%" height="15" fill="rgb(215,77,49)" fg:x="25" fg:w="13"/><text x="31.1142%" y="895.50">gdtk.exe`core::ops::funct..</text></g><g><title>gdtk.exe`core::ops::function::FnOnce::call_once(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (13 samples, 16.05%)</title><rect x="30.8642%" y="869" width="16.0494%" height="15" fill="rgb(248,100,22)" fg:x="25" fg:w="13"/><text x="31.1142%" y="879.50">gdtk.exe`core::ops::funct..</text></g><g><title>gdtk.exe`std::rt::lang_start::closure$0(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$ (13 samples, 16.05%)</title><rect x="30.8642%" y="853" width="16.0494%" height="15" fill="rgb(208,67,9)" fg:x="25" fg:w="13"/><text x="31.1142%" y="863.50">gdtk.exe`std::rt::lang_st..</text></g><g><title>gdtk.exe`std::process::impl$61::report(enum2$&lt;core::result::Result&lt;tuple$ (13 samples, 16.05%)</title><rect x="30.8642%" y="837" width="16.0494%" height="15" fill="rgb(219,133,21)" fg:x="25" fg:w="13"/><text x="31.1142%" y="847.50">gdtk.exe`std::process::im..</text></g><g><title>gdtk.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,anyhow::Error&gt; &gt; (*) (13 samples, 16.05%)</title><rect x="30.8642%" y="821" width="16.0494%" height="15" fill="rgb(246,46,29)" fg:x="25" fg:w="13"/><text x="31.1142%" y="831.50">gdtk.exe`std::sys_common:..</text></g><g><title>gdtk.exe`gdtk::main (13 samples, 16.05%)</title><rect x="30.8642%" y="805" width="16.0494%" height="15" fill="rgb(246,185,52)" fg:x="25" fg:w="13"/><text x="31.1142%" y="815.50">gdtk.exe`gdtk::main</text></g><g><title>gdtk.exe`tokio::runtime::runtime::Runtime::block_on(enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="789" width="8.6420%" height="15" fill="rgb(252,136,11)" fg:x="31" fg:w="7"/><text x="38.5216%" y="799.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::scheduler::multi_thread::MultiThread::block_on(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="773" width="8.6420%" height="15" fill="rgb(219,138,53)" fg:x="31" fg:w="7"/><text x="38.5216%" y="783.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::context::runtime::enter_runtime(enum2$&lt;tokio::runtime::scheduler::Handle&gt;*, bool, tokio::runtime::scheduler::multi_thread::impl$0::block_on::closure_env$0&lt;enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="757" width="8.6420%" height="15" fill="rgb(211,51,23)" fg:x="31" fg:w="7"/><text x="38.5216%" y="767.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::scheduler::multi_thread::impl$0::block_on::closure$0(tokio::runtime::scheduler::multi_thread::impl$0::block_on::closure_env$0&lt;enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="741" width="8.6420%" height="15" fill="rgb(247,221,28)" fg:x="31" fg:w="7"/><text x="38.5216%" y="751.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::context::blocking::BlockingRegionGuard::block_on(enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="725" width="8.6420%" height="15" fill="rgb(251,222,45)" fg:x="31" fg:w="7"/><text x="38.5216%" y="735.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::park::CachedParkThread::block_on(enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="709" width="8.6420%" height="15" fill="rgb(217,162,53)" fg:x="31" fg:w="7"/><text x="38.5216%" y="719.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::coop::budget(tokio::runtime::park::impl$4::block_on::closure_env$0&lt;enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="693" width="8.6420%" height="15" fill="rgb(229,93,14)" fg:x="31" fg:w="7"/><text x="38.5216%" y="703.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`tokio::runtime::coop::with_budget(tokio::runtime::coop::Budget, tokio::runtime::park::impl$4::block_on::closure_env$0&lt;enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="677" width="8.6420%" height="15" fill="rgb(209,67,49)" fg:x="31" fg:w="7"/><text x="38.5216%" y="687.50">gdtk.exe`tok..</text></g><g><title>gdtk.exe`core::ptr::drop_in_place(enum2$&lt;core::result::Result (7 samples, 8.64%)</title><rect x="38.2716%" y="661" width="8.6420%" height="15" fill="rgb(213,87,29)" fg:x="31" fg:w="7"/><text x="38.5216%" y="671.50">gdtk.exe`cor..</text></g><g><title>gdtk.exe`gdtk::main::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (7 samples, 8.64%)</title><rect x="38.2716%" y="645" width="8.6420%" height="15" fill="rgb(205,151,52)" fg:x="31" fg:w="7"/><text x="38.5216%" y="655.50">gdtk.exe`gdt..</text></g><g><title>gdtk.exe`gdtk::commands::parse::run (6 samples, 7.41%)</title><rect x="39.5062%" y="629" width="7.4074%" height="15" fill="rgb(253,215,39)" fg:x="32" fg:w="6"/><text x="39.7562%" y="639.50">gdtk.exe`g..</text></g><g><title>gdtk.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;gdtk_ast::poor::ASTClass,enum2$ (4 samples, 4.94%)</title><rect x="41.9753%" y="613" width="4.9383%" height="15" fill="rgb(221,220,41)" fg:x="34" fg:w="4"/><text x="42.2253%" y="623.50">gdtk.e..</text></g><g><title>gdtk.exe`gdtk_parser::parse_file(tuple$&lt;alloc::vec::Vec&lt;gdtk_lexer::token::Token,alloc::alloc::Global&gt;,alloc::vec::Vec (4 samples, 4.94%)</title><rect x="41.9753%" y="597" width="4.9383%" height="15" fill="rgb(218,133,21)" fg:x="34" fg:w="4"/><text x="42.2253%" y="607.50">gdtk.e..</text></g><g><title>gdtk.exe`gdtk_parser::functions::parse_func(core::iter::adapters::peekable::Peekable&lt;alloc::vec::into_iter::IntoIter (4 samples, 4.94%)</title><rect x="41.9753%" y="581" width="4.9383%" height="15" fill="rgb(221,193,43)" fg:x="34" fg:w="4"/><text x="42.2253%" y="591.50">gdtk.e..</text></g><g><title>gdtk.exe`std::io::stdio::_eprint (3 samples, 3.70%)</title><rect x="43.2099%" y="565" width="3.7037%" height="15" fill="rgb(240,128,52)" fg:x="35" fg:w="3"/><text x="43.4599%" y="575.50">gdtk..</text></g><g><title>gdtk.exe`std::io::stdio::print_to (3 samples, 3.70%)</title><rect x="43.2099%" y="549" width="3.7037%" height="15" fill="rgb(253,114,12)" fg:x="35" fg:w="3"/><text x="43.4599%" y="559.50">gdtk..</text></g><g><title>gdtk.exe`std::io::stdio::impl$18::write_fmt (3 samples, 3.70%)</title><rect x="43.2099%" y="533" width="3.7037%" height="15" fill="rgb(215,223,47)" fg:x="35" fg:w="3"/><text x="43.4599%" y="543.50">gdtk..</text></g><g><title>gdtk.exe`std::io::Write::write_fmt (3 samples, 3.70%)</title><rect x="43.2099%" y="517" width="3.7037%" height="15" fill="rgb(248,225,23)" fg:x="35" fg:w="3"/><text x="43.4599%" y="527.50">gdtk..</text></g><g><title>gdtk.exe`core::fmt::write (3 samples, 3.70%)</title><rect x="43.2099%" y="501" width="3.7037%" height="15" fill="rgb(250,108,0)" fg:x="35" fg:w="3"/><text x="43.4599%" y="511.50">gdtk..</text></g><g><title>gdtk.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StderrLock&gt; (2 samples, 2.47%)</title><rect x="44.4444%" y="485" width="2.4691%" height="15" fill="rgb(228,208,7)" fg:x="36" fg:w="2"/><text x="44.6944%" y="495.50">gd..</text></g><g><title>gdtk.exe`std::io::stdio::impl$19::write_all (2 samples, 2.47%)</title><rect x="44.4444%" y="469" width="2.4691%" height="15" fill="rgb(244,45,10)" fg:x="36" fg:w="2"/><text x="44.6944%" y="479.50">gd..</text></g><g><title>gdtk.exe`std::io::stdio::impl$2::write_all (2 samples, 2.47%)</title><rect x="44.4444%" y="453" width="2.4691%" height="15" fill="rgb(207,125,25)" fg:x="36" fg:w="2"/><text x="44.6944%" y="463.50">gd..</text></g><g><title>gdtk.exe`std::io::stdio::handle_ebadf (2 samples, 2.47%)</title><rect x="44.4444%" y="437" width="2.4691%" height="15" fill="rgb(210,195,18)" fg:x="36" fg:w="2"/><text x="44.6944%" y="447.50">gd..</text></g><g><title>gdtk.exe`std::io::Write::write_all&lt;std::sys::pal::windows::stdio::Stderr&gt; (2 samples, 2.47%)</title><rect x="44.4444%" y="421" width="2.4691%" height="15" fill="rgb(249,80,12)" fg:x="36" fg:w="2"/><text x="44.6944%" y="431.50">gd..</text></g><g><title>gdtk.exe`std::sys::pal::windows::stdio::write (2 samples, 2.47%)</title><rect x="44.4444%" y="405" width="2.4691%" height="15" fill="rgb(221,65,9)" fg:x="36" fg:w="2"/><text x="44.6944%" y="415.50">gd..</text></g><g><title>gdtk.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (1 samples, 1.23%)</title><rect x="45.6790%" y="389" width="1.2346%" height="15" fill="rgb(235,49,36)" fg:x="37" fg:w="1"/><text x="45.9290%" y="399.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::stdio::write_u16s (1 samples, 1.23%)</title><rect x="45.6790%" y="373" width="1.2346%" height="15" fill="rgb(225,32,20)" fg:x="37" fg:w="1"/><text x="45.9290%" y="383.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::cvt (1 samples, 1.23%)</title><rect x="45.6790%" y="357" width="1.2346%" height="15" fill="rgb(215,141,46)" fg:x="37" fg:w="1"/><text x="45.9290%" y="367.50"></text></g><g><title>gdtk.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 1.23%)</title><rect x="45.6790%" y="341" width="1.2346%" height="15" fill="rgb(250,160,47)" fg:x="37" fg:w="1"/><text x="45.9290%" y="351.50"></text></g><g><title>`0x7FF8AA8A773A (1 samples, 1.23%)</title><rect x="45.6790%" y="325" width="1.2346%" height="15" fill="rgb(216,222,40)" fg:x="37" fg:w="1"/><text x="45.9290%" y="335.50"></text></g><g><title>`0x7FF8AA8A7861 (1 samples, 1.23%)</title><rect x="45.6790%" y="309" width="1.2346%" height="15" fill="rgb(234,217,39)" fg:x="37" fg:w="1"/><text x="45.9290%" y="319.50"></text></g><g><title>`0x7FF8AD14D0C4 (1 samples, 1.23%)</title><rect x="45.6790%" y="293" width="1.2346%" height="15" fill="rgb(207,178,40)" fg:x="37" fg:w="1"/><text x="45.9290%" y="303.50"></text></g><g><title>gdtk.exe`parking_lot::raw_mutex::RawMutex::lock_slow(enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="46.9136%" y="853" width="1.2346%" height="15" fill="rgb(221,136,13)" fg:x="38" fg:w="1"/><text x="47.1636%" y="863.50"></text></g><g><title>gdtk.exe`parking_lot_core::parking_lot::park(unsigned long long, parking_lot::raw_mutex::impl$3::lock_slow::closure_env$0, parking_lot::raw_mutex::impl$3::lock_slow::closure_env$1, parking_lot::raw_mutex::impl$3::lock_slow::closure_env$2, parking_lot_core::parking_lot::ParkToken, enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="46.9136%" y="837" width="1.2346%" height="15" fill="rgb(249,199,10)" fg:x="38" fg:w="1"/><text x="47.1636%" y="847.50"></text></g><g><title>gdtk.exe`parking_lot_core::parking_lot::with_thread_data(parking_lot_core::parking_lot::park::closure_env$0 (1 samples, 1.23%)</title><rect x="46.9136%" y="821" width="1.2346%" height="15" fill="rgb(249,222,13)" fg:x="38" fg:w="1"/><text x="47.1636%" y="831.50"></text></g><g><title>gdtk.exe`std::thread::local::LocalKey&lt;parking_lot_core::parking_lot::ThreadData&gt;::try_with(parking_lot_core::parking_lot::with_thread_data::closure_env$0&lt;enum2$&lt;parking_lot_core::parking_lot::ParkResult&gt;,parking_lot_core::parking_lot::park::closure_env$0 (1 samples, 1.23%)</title><rect x="46.9136%" y="805" width="1.2346%" height="15" fill="rgb(244,185,38)" fg:x="38" fg:w="1"/><text x="47.1636%" y="815.50"></text></g><g><title>gdtk.exe`std::sys::pal::common::thread_local::fast_local::Key&lt;parking_lot_core::parking_lot::ThreadData&gt;::try_initialize&lt;parking_lot_core::parking_lot::ThreadData,parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit::closure_env$0&gt; (1 samples, 1.23%)</title><rect x="46.9136%" y="789" width="1.2346%" height="15" fill="rgb(236,202,9)" fg:x="38" fg:w="1"/><text x="47.1636%" y="799.50"></text></g><g><title>gdtk.exe`std::sys::pal::common::thread_local::lazy::LazyKeyInner&lt;parking_lot_core::parking_lot::ThreadData&gt;::initialize (1 samples, 1.23%)</title><rect x="46.9136%" y="773" width="1.2346%" height="15" fill="rgb(250,229,37)" fg:x="38" fg:w="1"/><text x="47.1636%" y="783.50"></text></g><g><title>gdtk.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;parking_lot_core::parking_lot::ThreadData&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="46.9136%" y="757" width="1.2346%" height="15" fill="rgb(206,174,23)" fg:x="38" fg:w="1"/><text x="47.1636%" y="767.50"></text></g><g><title>gdtk.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;parking_lot_core::parking_lot::ThreadData&gt; &gt;*, enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="46.9136%" y="741" width="1.2346%" height="15" fill="rgb(211,33,43)" fg:x="38" fg:w="1"/><text x="47.1636%" y="751.50"></text></g><g><title>gdtk.exe`parking_lot_core::parking_lot::ThreadData::new (1 samples, 1.23%)</title><rect x="46.9136%" y="725" width="1.2346%" height="15" fill="rgb(245,58,50)" fg:x="38" fg:w="1"/><text x="47.1636%" y="735.50"></text></g><g><title>gdtk.exe`alloc::boxed::impl$47::call_once (2 samples, 2.47%)</title><rect x="46.9136%" y="1013" width="2.4691%" height="15" fill="rgb(244,68,36)" fg:x="38" fg:w="2"/><text x="47.1636%" y="1023.50">gd..</text></g><g><title>gdtk.exe`alloc::boxed::impl$47::call_once (2 samples, 2.47%)</title><rect x="46.9136%" y="997" width="2.4691%" height="15" fill="rgb(232,229,15)" fg:x="38" fg:w="2"/><text x="47.1636%" y="1007.50">gd..</text></g><g><title>gdtk.exe`alloc::boxed::impl$8::drop (2 samples, 2.47%)</title><rect x="46.9136%" y="981" width="2.4691%" height="15" fill="rgb(254,30,23)" fg:x="38" fg:w="2"/><text x="47.1636%" y="991.50">gd..</text></g><g><title>gdtk.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (2 samples, 2.47%)</title><rect x="46.9136%" y="965" width="2.4691%" height="15" fill="rgb(235,160,14)" fg:x="38" fg:w="2"/><text x="47.1636%" y="975.50">gd..</text></g><g><title>gdtk.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$ (2 samples, 2.47%)</title><rect x="46.9136%" y="949" width="2.4691%" height="15" fill="rgb(212,155,44)" fg:x="38" fg:w="2"/><text x="47.1636%" y="959.50">gd..</text></g><g><title>gdtk.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (2 samples, 2.47%)</title><rect x="46.9136%" y="933" width="2.4691%" height="15" fill="rgb(226,2,50)" fg:x="38" fg:w="2"/><text x="47.1636%" y="943.50">gd..</text></g><g><title>gdtk.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (2 samples, 2.47%)</title><rect x="46.9136%" y="917" width="2.4691%" height="15" fill="rgb(234,177,6)" fg:x="38" fg:w="2"/><text x="47.1636%" y="927.50">gd..</text></g><g><title>gdtk.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (2 samples, 2.47%)</title><rect x="46.9136%" y="901" width="2.4691%" height="15" fill="rgb(217,24,9)" fg:x="38" fg:w="2"/><text x="47.1636%" y="911.50">gd..</text></g><g><title>gdtk.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;tokio::runtime::blocking::pool::impl$6::spawn_thread::closure_env$0,tuple$&lt;&gt; &gt; (2 samples, 2.47%)</title><rect x="46.9136%" y="885" width="2.4691%" height="15" fill="rgb(220,13,46)" fg:x="38" fg:w="2"/><text x="47.1636%" y="895.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::impl$6::spawn_thread::closure$0 (2 samples, 2.47%)</title><rect x="46.9136%" y="869" width="2.4691%" height="15" fill="rgb(239,221,27)" fg:x="38" fg:w="2"/><text x="47.1636%" y="879.50">gd..</text></g><g><title>gdtk.exe`tokio::runtime::blocking::pool::Inner::run (1 samples, 1.23%)</title><rect x="48.1481%" y="853" width="1.2346%" height="15" fill="rgb(222,198,25)" fg:x="39" fg:w="1"/><text x="48.3981%" y="863.50"></text></g><g><title>gdtk.exe`parking_lot::condvar::Condvar::wait_until_internal(parking_lot::raw_mutex::RawMutex*, enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="48.1481%" y="837" width="1.2346%" height="15" fill="rgb(211,99,13)" fg:x="39" fg:w="1"/><text x="48.3981%" y="847.50"></text></g><g><title>gdtk.exe`parking_lot_core::parking_lot::park(unsigned long long, parking_lot::condvar::impl$1::wait_until_internal::closure_env$0, parking_lot::condvar::impl$1::wait_until_internal::closure_env$1, parking_lot::condvar::impl$1::wait_until_internal::closure_env$2, parking_lot_core::parking_lot::ParkToken, enum2$&lt;core::option::Option (1 samples, 1.23%)</title><rect x="48.1481%" y="821" width="1.2346%" height="15" fill="rgb(232,111,31)" fg:x="39" fg:w="1"/><text x="48.3981%" y="831.50"></text></g><g><title>gdtk.exe`parking_lot_core::parking_lot::with_thread_data(parking_lot_core::parking_lot::park::closure_env$0 (1 samples, 1.23%)</title><rect x="48.1481%" y="805" width="1.2346%" height="15" fill="rgb(245,82,37)" fg:x="39" fg:w="1"/><text x="48.3981%" y="815.50"></text></g><g><title>gdtk.exe`parking_lot_core::parking_lot::park::closure$0(parking_lot_core::parking_lot::park::closure_env$0 (1 samples, 1.23%)</title><rect x="48.1481%" y="789" width="1.2346%" height="15" fill="rgb(227,149,46)" fg:x="39" fg:w="1"/><text x="48.3981%" y="799.50"></text></g><g><title>gdtk.exe`parking_lot_core::thread_parker::imp::impl$1::park_until (1 samples, 1.23%)</title><rect x="48.1481%" y="773" width="1.2346%" height="15" fill="rgb(218,36,50)" fg:x="39" fg:w="1"/><text x="48.3981%" y="783.50"></text></g><g><title>`0x7FF8AD1026B1 (38 samples, 46.91%)</title><rect x="3.7037%" y="1061" width="46.9136%" height="15" fill="rgb(226,80,48)" fg:x="3" fg:w="38"/><text x="3.9537%" y="1071.50">`0x7FF8AD1026B1</text></g><g><title>`0x7FF8AB9E7344 (38 samples, 46.91%)</title><rect x="3.7037%" y="1045" width="46.9136%" height="15" fill="rgb(238,224,15)" fg:x="3" fg:w="38"/><text x="3.9537%" y="1055.50">`0x7FF8AB9E7344</text></g><g><title>gdtk.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (3 samples, 3.70%)</title><rect x="46.9136%" y="1029" width="3.7037%" height="15" fill="rgb(241,136,10)" fg:x="38" fg:w="3"/><text x="47.1636%" y="1039.50">gdtk..</text></g><g><title>gdtk.exe`std::sys::pal::windows::stack_overflow::Handler::new (1 samples, 1.23%)</title><rect x="49.3827%" y="1013" width="1.2346%" height="15" fill="rgb(208,32,45)" fg:x="40" fg:w="1"/><text x="49.6327%" y="1023.50"></text></g><g><title>`0x7FF8AA90686B (1 samples, 1.23%)</title><rect x="49.3827%" y="997" width="1.2346%" height="15" fill="rgb(207,135,9)" fg:x="40" fg:w="1"/><text x="49.6327%" y="1007.50"></text></g><g><title>`0x7FF8AD14D2E4 (1 samples, 1.23%)</title><rect x="49.3827%" y="981" width="1.2346%" height="15" fill="rgb(206,86,44)" fg:x="40" fg:w="1"/><text x="49.6327%" y="991.50"></text></g><g><title>`0x7FF8AD124BE0 (1 samples, 1.23%)</title><rect x="50.6173%" y="1061" width="1.2346%" height="15" fill="rgb(245,177,15)" fg:x="41" fg:w="1"/><text x="50.8673%" y="1071.50"></text></g><g><title>`0x7FF8AD182808 (1 samples, 1.23%)</title><rect x="51.8519%" y="1013" width="1.2346%" height="15" fill="rgb(206,64,50)" fg:x="42" fg:w="1"/><text x="52.1019%" y="1023.50"></text></g><g><title>`0x7FF8AD0F2EA0 (1 samples, 1.23%)</title><rect x="51.8519%" y="997" width="1.2346%" height="15" fill="rgb(234,36,40)" fg:x="42" fg:w="1"/><text x="52.1019%" y="1007.50"></text></g><g><title>`0x7FF8AD0F30E5 (1 samples, 1.23%)</title><rect x="51.8519%" y="981" width="1.2346%" height="15" fill="rgb(213,64,8)" fg:x="42" fg:w="1"/><text x="52.1019%" y="991.50"></text></g><g><title>`0x7FF8AD0F2F43 (1 samples, 1.23%)</title><rect x="51.8519%" y="965" width="1.2346%" height="15" fill="rgb(210,75,36)" fg:x="42" fg:w="1"/><text x="52.1019%" y="975.50"></text></g><g><title>`0x7FF8AD0F38C0 (1 samples, 1.23%)</title><rect x="51.8519%" y="949" width="1.2346%" height="15" fill="rgb(229,88,21)" fg:x="42" fg:w="1"/><text x="52.1019%" y="959.50"></text></g><g><title>`0x7FF8AD12DA7E (1 samples, 1.23%)</title><rect x="51.8519%" y="933" width="1.2346%" height="15" fill="rgb(252,204,47)" fg:x="42" fg:w="1"/><text x="52.1019%" y="943.50"></text></g><g><title>`0x7FF8AD0BE02C (1 samples, 1.23%)</title><rect x="51.8519%" y="917" width="1.2346%" height="15" fill="rgb(208,77,27)" fg:x="42" fg:w="1"/><text x="52.1019%" y="927.50"></text></g><g><title>`0x7FF8AD0C09A3 (1 samples, 1.23%)</title><rect x="51.8519%" y="901" width="1.2346%" height="15" fill="rgb(221,76,26)" fg:x="42" fg:w="1"/><text x="52.1019%" y="911.50"></text></g><g><title>`0x7FF8AD0C22CD (1 samples, 1.23%)</title><rect x="51.8519%" y="885" width="1.2346%" height="15" fill="rgb(225,139,18)" fg:x="42" fg:w="1"/><text x="52.1019%" y="895.50"></text></g><g><title>`0x7FF8AD0C2634 (1 samples, 1.23%)</title><rect x="51.8519%" y="869" width="1.2346%" height="15" fill="rgb(230,137,11)" fg:x="42" fg:w="1"/><text x="52.1019%" y="879.50"></text></g><g><title>`0x7FF8AD0C388C (1 samples, 1.23%)</title><rect x="51.8519%" y="853" width="1.2346%" height="15" fill="rgb(212,28,1)" fg:x="42" fg:w="1"/><text x="52.1019%" y="863.50"></text></g><g><title>`0x7FF8AD111A2B (1 samples, 1.23%)</title><rect x="51.8519%" y="837" width="1.2346%" height="15" fill="rgb(248,164,17)" fg:x="42" fg:w="1"/><text x="52.1019%" y="847.50"></text></g><g><title>`0x7FF8AD111EFF (1 samples, 1.23%)</title><rect x="51.8519%" y="821" width="1.2346%" height="15" fill="rgb(222,171,42)" fg:x="42" fg:w="1"/><text x="52.1019%" y="831.50"></text></g><g><title>`0x7FF8AD14FC14 (1 samples, 1.23%)</title><rect x="51.8519%" y="805" width="1.2346%" height="15" fill="rgb(243,84,45)" fg:x="42" fg:w="1"/><text x="52.1019%" y="815.50"></text></g><g><title>`0x7FF8AD1832DC (1 samples, 1.23%)</title><rect x="53.0864%" y="1013" width="1.2346%" height="15" fill="rgb(252,49,23)" fg:x="43" fg:w="1"/><text x="53.3364%" y="1023.50"></text></g><g><title>`0x7FF8AD10E7D2 (1 samples, 1.23%)</title><rect x="53.0864%" y="997" width="1.2346%" height="15" fill="rgb(215,19,7)" fg:x="43" fg:w="1"/><text x="53.3364%" y="1007.50"></text></g><g><title>`0x7FF8AD10E8A8 (1 samples, 1.23%)</title><rect x="53.0864%" y="981" width="1.2346%" height="15" fill="rgb(238,81,41)" fg:x="43" fg:w="1"/><text x="53.3364%" y="991.50"></text></g><g><title>`0x7FF8AD14D644 (1 samples, 1.23%)</title><rect x="53.0864%" y="965" width="1.2346%" height="15" fill="rgb(210,199,37)" fg:x="43" fg:w="1"/><text x="53.3364%" y="975.50"></text></g><g><title>`0x7FF8AD0C7B29 (1 samples, 1.23%)</title><rect x="54.3210%" y="901" width="1.2346%" height="15" fill="rgb(244,192,49)" fg:x="44" fg:w="1"/><text x="54.5710%" y="911.50"></text></g><g><title>`0x7FF8AD0C88A8 (1 samples, 1.23%)</title><rect x="54.3210%" y="885" width="1.2346%" height="15" fill="rgb(226,211,11)" fg:x="44" fg:w="1"/><text x="54.5710%" y="895.50"></text></g><g><title>`0x7FF8AD0C4479 (1 samples, 1.23%)</title><rect x="54.3210%" y="869" width="1.2346%" height="15" fill="rgb(236,162,54)" fg:x="44" fg:w="1"/><text x="54.5710%" y="879.50"></text></g><g><title>`0x7FF8AD0C4C14 (1 samples, 1.23%)</title><rect x="54.3210%" y="853" width="1.2346%" height="15" fill="rgb(220,229,9)" fg:x="44" fg:w="1"/><text x="54.5710%" y="863.50"></text></g><g><title>`0x7FF8AD0C79D2 (1 samples, 1.23%)</title><rect x="54.3210%" y="837" width="1.2346%" height="15" fill="rgb(250,87,22)" fg:x="44" fg:w="1"/><text x="54.5710%" y="847.50"></text></g><g><title>`0x7FF8AD0C5093 (1 samples, 1.23%)</title><rect x="54.3210%" y="821" width="1.2346%" height="15" fill="rgb(239,43,17)" fg:x="44" fg:w="1"/><text x="54.5710%" y="831.50"></text></g><g><title>`0x7FF8AD0E26C6 (1 samples, 1.23%)</title><rect x="55.5556%" y="885" width="1.2346%" height="15" fill="rgb(231,177,25)" fg:x="45" fg:w="1"/><text x="55.8056%" y="895.50"></text></g><g><title>`0x7FF8AD0CFB31 (3 samples, 3.70%)</title><rect x="54.3210%" y="965" width="3.7037%" height="15" fill="rgb(219,179,1)" fg:x="44" fg:w="3"/><text x="54.5710%" y="975.50">`0x7..</text></g><g><title>`0x7FF8AD11B2BD (3 samples, 3.70%)</title><rect x="54.3210%" y="949" width="3.7037%" height="15" fill="rgb(238,219,53)" fg:x="44" fg:w="3"/><text x="54.5710%" y="959.50">`0x7..</text></g><g><title>`0x7FF8AD0C4479 (3 samples, 3.70%)</title><rect x="54.3210%" y="933" width="3.7037%" height="15" fill="rgb(232,167,36)" fg:x="44" fg:w="3"/><text x="54.5710%" y="943.50">`0x7..</text></g><g><title>`0x7FF8AD0C4C14 (3 samples, 3.70%)</title><rect x="54.3210%" y="917" width="3.7037%" height="15" fill="rgb(244,19,51)" fg:x="44" fg:w="3"/><text x="54.5710%" y="927.50">`0x7..</text></g><g><title>`0x7FF8AD0C7BC4 (2 samples, 2.47%)</title><rect x="55.5556%" y="901" width="2.4691%" height="15" fill="rgb(224,6,22)" fg:x="45" fg:w="2"/><text x="55.8056%" y="911.50">`0..</text></g><g><title>`0x7FF8AD0E2714 (1 samples, 1.23%)</title><rect x="56.7901%" y="885" width="1.2346%" height="15" fill="rgb(224,145,5)" fg:x="46" fg:w="1"/><text x="57.0401%" y="895.50"></text></g><g><title>`0x7FF8AA8A67BD (1 samples, 1.23%)</title><rect x="58.0247%" y="869" width="1.2346%" height="15" fill="rgb(234,130,49)" fg:x="47" fg:w="1"/><text x="58.2747%" y="879.50"></text></g><g><title>`0x7FF8AA8A6B64 (1 samples, 1.23%)</title><rect x="58.0247%" y="853" width="1.2346%" height="15" fill="rgb(254,6,2)" fg:x="47" fg:w="1"/><text x="58.2747%" y="863.50"></text></g><g><title>`0x7FF8AD18375E (5 samples, 6.17%)</title><rect x="54.3210%" y="1013" width="6.1728%" height="15" fill="rgb(208,96,46)" fg:x="44" fg:w="5"/><text x="54.5710%" y="1023.50">`0x7FF8A..</text></g><g><title>`0x7FF8AD0C6AF4 (5 samples, 6.17%)</title><rect x="54.3210%" y="997" width="6.1728%" height="15" fill="rgb(239,3,39)" fg:x="44" fg:w="5"/><text x="54.5710%" y="1007.50">`0x7FF8A..</text></g><g><title>`0x7FF8AD0C73E4 (5 samples, 6.17%)</title><rect x="54.3210%" y="981" width="6.1728%" height="15" fill="rgb(233,210,1)" fg:x="44" fg:w="5"/><text x="54.5710%" y="991.50">`0x7FF8A..</text></g><g><title>`0x7FF8AD0CFBAE (2 samples, 2.47%)</title><rect x="58.0247%" y="965" width="2.4691%" height="15" fill="rgb(244,137,37)" fg:x="47" fg:w="2"/><text x="58.2747%" y="975.50">`0..</text></g><g><title>`0x7FF8AD0ED947 (2 samples, 2.47%)</title><rect x="58.0247%" y="949" width="2.4691%" height="15" fill="rgb(240,136,2)" fg:x="47" fg:w="2"/><text x="58.2747%" y="959.50">`0..</text></g><g><title>`0x7FF8AD11C0E0 (2 samples, 2.47%)</title><rect x="58.0247%" y="933" width="2.4691%" height="15" fill="rgb(239,18,37)" fg:x="47" fg:w="2"/><text x="58.2747%" y="943.50">`0..</text></g><g><title>`0x7FF8AD11C05A (2 samples, 2.47%)</title><rect x="58.0247%" y="917" width="2.4691%" height="15" fill="rgb(218,185,22)" fg:x="47" fg:w="2"/><text x="58.2747%" y="927.50">`0..</text></g><g><title>`0x7FF8AD11C2C7 (2 samples, 2.47%)</title><rect x="58.0247%" y="901" width="2.4691%" height="15" fill="rgb(225,218,4)" fg:x="47" fg:w="2"/><text x="58.2747%" y="911.50">`0..</text></g><g><title>`0x7FF8AD0C9A1D (2 samples, 2.47%)</title><rect x="58.0247%" y="885" width="2.4691%" height="15" fill="rgb(230,182,32)" fg:x="47" fg:w="2"/><text x="58.2747%" y="895.50">`0..</text></g><g><title>`0x7FF8AA8A67E7 (1 samples, 1.23%)</title><rect x="59.2593%" y="869" width="1.2346%" height="15" fill="rgb(242,56,43)" fg:x="48" fg:w="1"/><text x="59.5093%" y="879.50"></text></g><g><title>`0x7FF8AA92C587 (1 samples, 1.23%)</title><rect x="59.2593%" y="853" width="1.2346%" height="15" fill="rgb(233,99,24)" fg:x="48" fg:w="1"/><text x="59.5093%" y="863.50"></text></g><g><title>`0x7FF8AA92BA7E (1 samples, 1.23%)</title><rect x="59.2593%" y="837" width="1.2346%" height="15" fill="rgb(234,209,42)" fg:x="48" fg:w="1"/><text x="59.5093%" y="847.50"></text></g><g><title>`0x7FF8AA929F3F (1 samples, 1.23%)</title><rect x="59.2593%" y="821" width="1.2346%" height="15" fill="rgb(227,7,12)" fg:x="48" fg:w="1"/><text x="59.5093%" y="831.50"></text></g><g><title>`0x7FF8AA929ADC (1 samples, 1.23%)</title><rect x="59.2593%" y="805" width="1.2346%" height="15" fill="rgb(245,203,43)" fg:x="48" fg:w="1"/><text x="59.5093%" y="815.50"></text></g><g><title>`0x7FF8AA8BED78 (1 samples, 1.23%)</title><rect x="59.2593%" y="789" width="1.2346%" height="15" fill="rgb(238,205,33)" fg:x="48" fg:w="1"/><text x="59.5093%" y="799.50"></text></g><g><title>`0x7FF8AD14E654 (1 samples, 1.23%)</title><rect x="59.2593%" y="773" width="1.2346%" height="15" fill="rgb(231,56,7)" fg:x="48" fg:w="1"/><text x="59.5093%" y="783.50"></text></g><g><title>`0x7FF8AD18382D (1 samples, 1.23%)</title><rect x="60.4938%" y="1013" width="1.2346%" height="15" fill="rgb(244,186,29)" fg:x="49" fg:w="1"/><text x="60.7438%" y="1023.50"></text></g><g><title>`0x7FF8AD0C7063 (1 samples, 1.23%)</title><rect x="60.4938%" y="997" width="1.2346%" height="15" fill="rgb(234,111,31)" fg:x="49" fg:w="1"/><text x="60.7438%" y="1007.50"></text></g><g><title>`0x7FF8AD0C60E9 (1 samples, 1.23%)</title><rect x="60.4938%" y="981" width="1.2346%" height="15" fill="rgb(241,149,10)" fg:x="49" fg:w="1"/><text x="60.7438%" y="991.50"></text></g><g><title>`0x7FF8AD183AA8 (1 samples, 1.23%)</title><rect x="61.7284%" y="1013" width="1.2346%" height="15" fill="rgb(249,206,44)" fg:x="50" fg:w="1"/><text x="61.9784%" y="1023.50"></text></g><g><title>`0x7FF8AD11163B (1 samples, 1.23%)</title><rect x="61.7284%" y="997" width="1.2346%" height="15" fill="rgb(251,153,30)" fg:x="50" fg:w="1"/><text x="61.9784%" y="1007.50"></text></g><g><title>`0x7FF8AD111A2B (1 samples, 1.23%)</title><rect x="61.7284%" y="981" width="1.2346%" height="15" fill="rgb(239,152,38)" fg:x="50" fg:w="1"/><text x="61.9784%" y="991.50"></text></g><g><title>`0x7FF8AD111F70 (1 samples, 1.23%)</title><rect x="61.7284%" y="965" width="1.2346%" height="15" fill="rgb(249,139,47)" fg:x="50" fg:w="1"/><text x="61.9784%" y="975.50"></text></g><g><title>`0x7FF8AD0D47B1 (1 samples, 1.23%)</title><rect x="61.7284%" y="949" width="1.2346%" height="15" fill="rgb(244,64,35)" fg:x="50" fg:w="1"/><text x="61.9784%" y="959.50"></text></g><g><title>`0x7FF8AD0D5715 (1 samples, 1.23%)</title><rect x="61.7284%" y="933" width="1.2346%" height="15" fill="rgb(216,46,15)" fg:x="50" fg:w="1"/><text x="61.9784%" y="943.50"></text></g><g><title>`0x7FF8AD0C4BCF (1 samples, 1.23%)</title><rect x="62.9630%" y="949" width="1.2346%" height="15" fill="rgb(250,74,19)" fg:x="51" fg:w="1"/><text x="63.2130%" y="959.50"></text></g><g><title>`0x7FF8AD0BFA99 (1 samples, 1.23%)</title><rect x="62.9630%" y="933" width="1.2346%" height="15" fill="rgb(249,42,33)" fg:x="51" fg:w="1"/><text x="63.2130%" y="943.50"></text></g><g><title>`0x7FF8AD0C0665 (1 samples, 1.23%)</title><rect x="62.9630%" y="917" width="1.2346%" height="15" fill="rgb(242,149,17)" fg:x="51" fg:w="1"/><text x="63.2130%" y="927.50"></text></g><g><title>`0x7FF8AD0C07A5 (1 samples, 1.23%)</title><rect x="62.9630%" y="901" width="1.2346%" height="15" fill="rgb(244,29,21)" fg:x="51" fg:w="1"/><text x="63.2130%" y="911.50"></text></g><g><title>`0x7FF8AD0E5C5E (1 samples, 1.23%)</title><rect x="62.9630%" y="885" width="1.2346%" height="15" fill="rgb(220,130,37)" fg:x="51" fg:w="1"/><text x="63.2130%" y="895.50"></text></g><g><title>`0x7FF8AD0C7AD9 (1 samples, 1.23%)</title><rect x="64.1975%" y="933" width="1.2346%" height="15" fill="rgb(211,67,2)" fg:x="52" fg:w="1"/><text x="64.4475%" y="943.50"></text></g><g><title>`0x7FF8AD0C4AAA (2 samples, 2.47%)</title><rect x="65.4321%" y="885" width="2.4691%" height="15" fill="rgb(235,68,52)" fg:x="53" fg:w="2"/><text x="65.6821%" y="895.50">`0..</text></g><g><title>`0x7FF8AD0C4D42 (2 samples, 2.47%)</title><rect x="65.4321%" y="869" width="2.4691%" height="15" fill="rgb(246,142,3)" fg:x="53" fg:w="2"/><text x="65.6821%" y="879.50">`0..</text></g><g><title>`0x7FF8AD14D4E4 (2 samples, 2.47%)</title><rect x="65.4321%" y="853" width="2.4691%" height="15" fill="rgb(241,25,7)" fg:x="53" fg:w="2"/><text x="65.6821%" y="863.50">`0..</text></g><g><title>`0x7FF8AD0BFA99 (2 samples, 2.47%)</title><rect x="67.9012%" y="869" width="2.4691%" height="15" fill="rgb(242,119,39)" fg:x="55" fg:w="2"/><text x="68.1512%" y="879.50">`0..</text></g><g><title>`0x7FF8AD0C06E7 (2 samples, 2.47%)</title><rect x="67.9012%" y="853" width="2.4691%" height="15" fill="rgb(241,98,45)" fg:x="55" fg:w="2"/><text x="68.1512%" y="863.50">`0..</text></g><g><title>`0x7FF8AD0C4BCF (3 samples, 3.70%)</title><rect x="67.9012%" y="885" width="3.7037%" height="15" fill="rgb(254,28,30)" fg:x="55" fg:w="3"/><text x="68.1512%" y="895.50">`0x7..</text></g><g><title>`0x7FF8AD0BFB05 (1 samples, 1.23%)</title><rect x="70.3704%" y="869" width="1.2346%" height="15" fill="rgb(241,142,54)" fg:x="57" fg:w="1"/><text x="70.6204%" y="879.50"></text></g><g><title>`0x7FF8AD0C0943 (1 samples, 1.23%)</title><rect x="70.3704%" y="853" width="1.2346%" height="15" fill="rgb(222,85,15)" fg:x="57" fg:w="1"/><text x="70.6204%" y="863.50"></text></g><g><title>`0x7FF8AD0C2296 (1 samples, 1.23%)</title><rect x="70.3704%" y="837" width="1.2346%" height="15" fill="rgb(210,85,47)" fg:x="57" fg:w="1"/><text x="70.6204%" y="847.50"></text></g><g><title>`0x7FF8AD0C354A (1 samples, 1.23%)</title><rect x="70.3704%" y="821" width="1.2346%" height="15" fill="rgb(224,206,25)" fg:x="57" fg:w="1"/><text x="70.6204%" y="831.50"></text></g><g><title>`0x7FF8AD14D9E4 (1 samples, 1.23%)</title><rect x="70.3704%" y="805" width="1.2346%" height="15" fill="rgb(243,201,19)" fg:x="57" fg:w="1"/><text x="70.6204%" y="815.50"></text></g><g><title>`0x7FF8AD0C4AAA (1 samples, 1.23%)</title><rect x="71.6049%" y="821" width="1.2346%" height="15" fill="rgb(236,59,4)" fg:x="58" fg:w="1"/><text x="71.8549%" y="831.50"></text></g><g><title>`0x7FF8AD0C4D42 (1 samples, 1.23%)</title><rect x="71.6049%" y="805" width="1.2346%" height="15" fill="rgb(254,179,45)" fg:x="58" fg:w="1"/><text x="71.8549%" y="815.50"></text></g><g><title>`0x7FF8AD14D4E4 (1 samples, 1.23%)</title><rect x="71.6049%" y="789" width="1.2346%" height="15" fill="rgb(226,14,10)" fg:x="58" fg:w="1"/><text x="71.8549%" y="799.50"></text></g><g><title>`0x7FF8AD0C7ADD (1 samples, 1.23%)</title><rect x="72.8395%" y="805" width="1.2346%" height="15" fill="rgb(244,27,41)" fg:x="59" fg:w="1"/><text x="73.0895%" y="815.50"></text></g><g><title>`0x7FF8AD0C88A8 (8 samples, 9.88%)</title><rect x="65.4321%" y="917" width="9.8765%" height="15" fill="rgb(235,35,32)" fg:x="53" fg:w="8"/><text x="65.6821%" y="927.50">`0x7FF8AD0C88A8</text></g><g><title>`0x7FF8AD0C4479 (8 samples, 9.88%)</title><rect x="65.4321%" y="901" width="9.8765%" height="15" fill="rgb(218,68,31)" fg:x="53" fg:w="8"/><text x="65.6821%" y="911.50">`0x7FF8AD0C4479</text></g><g><title>`0x7FF8AD0C4C14 (3 samples, 3.70%)</title><rect x="71.6049%" y="885" width="3.7037%" height="15" fill="rgb(207,120,37)" fg:x="58" fg:w="3"/><text x="71.8549%" y="895.50">`0x7..</text></g><g><title>`0x7FF8AD0C7B29 (3 samples, 3.70%)</title><rect x="71.6049%" y="869" width="3.7037%" height="15" fill="rgb(227,98,0)" fg:x="58" fg:w="3"/><text x="71.8549%" y="879.50">`0x7..</text></g><g><title>`0x7FF8AD0C88A8 (3 samples, 3.70%)</title><rect x="71.6049%" y="853" width="3.7037%" height="15" fill="rgb(207,7,3)" fg:x="58" fg:w="3"/><text x="71.8549%" y="863.50">`0x7..</text></g><g><title>`0x7FF8AD0C4479 (3 samples, 3.70%)</title><rect x="71.6049%" y="837" width="3.7037%" height="15" fill="rgb(206,98,19)" fg:x="58" fg:w="3"/><text x="71.8549%" y="847.50">`0x7..</text></g><g><title>`0x7FF8AD0C4C14 (2 samples, 2.47%)</title><rect x="72.8395%" y="821" width="2.4691%" height="15" fill="rgb(217,5,26)" fg:x="59" fg:w="2"/><text x="73.0895%" y="831.50">`0..</text></g><g><title>`0x7FF8AD0C7B29 (1 samples, 1.23%)</title><rect x="74.0741%" y="805" width="1.2346%" height="15" fill="rgb(235,190,38)" fg:x="60" fg:w="1"/><text x="74.3241%" y="815.50"></text></g><g><title>`0x7FF8AD0C88A8 (1 samples, 1.23%)</title><rect x="74.0741%" y="789" width="1.2346%" height="15" fill="rgb(247,86,24)" fg:x="60" fg:w="1"/><text x="74.3241%" y="799.50"></text></g><g><title>`0x7FF8AD0C4479 (1 samples, 1.23%)</title><rect x="74.0741%" y="773" width="1.2346%" height="15" fill="rgb(205,101,16)" fg:x="60" fg:w="1"/><text x="74.3241%" y="783.50"></text></g><g><title>`0x7FF8AD0C4C14 (1 samples, 1.23%)</title><rect x="74.0741%" y="757" width="1.2346%" height="15" fill="rgb(246,168,33)" fg:x="60" fg:w="1"/><text x="74.3241%" y="767.50"></text></g><g><title>`0x7FF8AD0C7B29 (1 samples, 1.23%)</title><rect x="74.0741%" y="741" width="1.2346%" height="15" fill="rgb(231,114,1)" fg:x="60" fg:w="1"/><text x="74.3241%" y="751.50"></text></g><g><title>`0x7FF8AD0C82C5 (1 samples, 1.23%)</title><rect x="74.0741%" y="725" width="1.2346%" height="15" fill="rgb(207,184,53)" fg:x="60" fg:w="1"/><text x="74.3241%" y="735.50"></text></g><g><title>`0x7FF8AD0C7B29 (9 samples, 11.11%)</title><rect x="65.4321%" y="933" width="11.1111%" height="15" fill="rgb(224,95,51)" fg:x="53" fg:w="9"/><text x="65.6821%" y="943.50">`0x7FF8AD0C7B29</text></g><g><title>`0x7FF8AD0C8AB7 (1 samples, 1.23%)</title><rect x="75.3086%" y="917" width="1.2346%" height="15" fill="rgb(212,188,45)" fg:x="61" fg:w="1"/><text x="75.5586%" y="927.50"></text></g><g><title>`0x7FF8AD183AFD (12 samples, 14.81%)</title><rect x="62.9630%" y="1013" width="14.8148%" height="15" fill="rgb(223,154,38)" fg:x="51" fg:w="12"/><text x="63.2130%" y="1023.50">`0x7FF8AD183AFD</text></g><g><title>`0x7FF8AD0C7B29 (12 samples, 14.81%)</title><rect x="62.9630%" y="997" width="14.8148%" height="15" fill="rgb(251,22,52)" fg:x="51" fg:w="12"/><text x="63.2130%" y="1007.50">`0x7FF8AD0C7B29</text></g><g><title>`0x7FF8AD0C88A8 (12 samples, 14.81%)</title><rect x="62.9630%" y="981" width="14.8148%" height="15" fill="rgb(229,209,22)" fg:x="51" fg:w="12"/><text x="63.2130%" y="991.50">`0x7FF8AD0C88A8</text></g><g><title>`0x7FF8AD0C4479 (12 samples, 14.81%)</title><rect x="62.9630%" y="965" width="14.8148%" height="15" fill="rgb(234,138,34)" fg:x="51" fg:w="12"/><text x="63.2130%" y="975.50">`0x7FF8AD0C4479</text></g><g><title>`0x7FF8AD0C4C14 (11 samples, 13.58%)</title><rect x="64.1975%" y="949" width="13.5802%" height="15" fill="rgb(212,95,11)" fg:x="52" fg:w="11"/><text x="64.4475%" y="959.50">`0x7FF8AD0C4C14</text></g><g><title>`0x7FF8AD0C7BA2 (1 samples, 1.23%)</title><rect x="76.5432%" y="933" width="1.2346%" height="15" fill="rgb(240,179,47)" fg:x="62" fg:w="1"/><text x="76.7932%" y="943.50"></text></g><g><title>`0x7FF8AD0BF49F (1 samples, 1.23%)</title><rect x="76.5432%" y="917" width="1.2346%" height="15" fill="rgb(240,163,11)" fg:x="62" fg:w="1"/><text x="76.7932%" y="927.50"></text></g><g><title>`0x7FF8AD0C2A66 (1 samples, 1.23%)</title><rect x="76.5432%" y="901" width="1.2346%" height="15" fill="rgb(236,37,12)" fg:x="62" fg:w="1"/><text x="76.7932%" y="911.50"></text></g><g><title>`0x7FF8AD0C2BD9 (1 samples, 1.23%)</title><rect x="76.5432%" y="885" width="1.2346%" height="15" fill="rgb(232,164,16)" fg:x="62" fg:w="1"/><text x="76.7932%" y="895.50"></text></g><g><title>`0x7FF8AD14FDF4 (1 samples, 1.23%)</title><rect x="76.5432%" y="869" width="1.2346%" height="15" fill="rgb(244,205,15)" fg:x="62" fg:w="1"/><text x="76.7932%" y="879.50"></text></g><g><title>`0x7FF8AD183B07 (1 samples, 1.23%)</title><rect x="77.7778%" y="1013" width="1.2346%" height="15" fill="rgb(223,117,47)" fg:x="63" fg:w="1"/><text x="78.0278%" y="1023.50"></text></g><g><title>`0x7FF8AD10EB58 (1 samples, 1.23%)</title><rect x="77.7778%" y="997" width="1.2346%" height="15" fill="rgb(244,107,35)" fg:x="63" fg:w="1"/><text x="78.0278%" y="1007.50"></text></g><g><title>`0x7FF8AD10EC70 (1 samples, 1.23%)</title><rect x="77.7778%" y="981" width="1.2346%" height="15" fill="rgb(205,140,8)" fg:x="63" fg:w="1"/><text x="78.0278%" y="991.50"></text></g><g><title>`0x7FF8AD10F6E6 (1 samples, 1.23%)</title><rect x="77.7778%" y="965" width="1.2346%" height="15" fill="rgb(228,84,46)" fg:x="63" fg:w="1"/><text x="78.0278%" y="975.50"></text></g><g><title>`0x7FF8AD10F026 (1 samples, 1.23%)</title><rect x="77.7778%" y="949" width="1.2346%" height="15" fill="rgb(254,188,9)" fg:x="63" fg:w="1"/><text x="78.0278%" y="959.50"></text></g><g><title>`0x7FF8AD10F207 (1 samples, 1.23%)</title><rect x="77.7778%" y="933" width="1.2346%" height="15" fill="rgb(206,112,54)" fg:x="63" fg:w="1"/><text x="78.0278%" y="943.50"></text></g><g><title>`0x7FF8AD10F37B (1 samples, 1.23%)</title><rect x="77.7778%" y="917" width="1.2346%" height="15" fill="rgb(216,84,49)" fg:x="63" fg:w="1"/><text x="78.0278%" y="927.50"></text></g><g><title>`0x7FF8AD14D784 (1 samples, 1.23%)</title><rect x="77.7778%" y="901" width="1.2346%" height="15" fill="rgb(214,194,35)" fg:x="63" fg:w="1"/><text x="78.0278%" y="911.50"></text></g><g><title>`0x7FF8AD183B26 (1 samples, 1.23%)</title><rect x="79.0123%" y="1013" width="1.2346%" height="15" fill="rgb(249,28,3)" fg:x="64" fg:w="1"/><text x="79.2623%" y="1023.50"></text></g><g><title>`0x7FF8AD0ED8FB (1 samples, 1.23%)</title><rect x="79.0123%" y="997" width="1.2346%" height="15" fill="rgb(222,56,52)" fg:x="64" fg:w="1"/><text x="79.2623%" y="1007.50"></text></g><g><title>`0x7FF8AD0EDBF4 (1 samples, 1.23%)</title><rect x="79.0123%" y="981" width="1.2346%" height="15" fill="rgb(245,217,50)" fg:x="64" fg:w="1"/><text x="79.2623%" y="991.50"></text></g><g><title>`0x7FF8AD0EDBF4 (1 samples, 1.23%)</title><rect x="79.0123%" y="965" width="1.2346%" height="15" fill="rgb(213,201,24)" fg:x="64" fg:w="1"/><text x="79.2623%" y="975.50"></text></g><g><title>`0x7FF8AD0EDBB4 (1 samples, 1.23%)</title><rect x="79.0123%" y="949" width="1.2346%" height="15" fill="rgb(248,116,28)" fg:x="64" fg:w="1"/><text x="79.2623%" y="959.50"></text></g><g><title>`0x7FF8AD0EDCBA (1 samples, 1.23%)</title><rect x="79.0123%" y="933" width="1.2346%" height="15" fill="rgb(219,72,43)" fg:x="64" fg:w="1"/><text x="79.2623%" y="943.50"></text></g><g><title>`0x7FF8AD1235D8 (1 samples, 1.23%)</title><rect x="79.0123%" y="917" width="1.2346%" height="15" fill="rgb(209,138,14)" fg:x="64" fg:w="1"/><text x="79.2623%" y="927.50"></text></g><g><title>`0x7FF8AD14D964 (1 samples, 1.23%)</title><rect x="79.0123%" y="901" width="1.2346%" height="15" fill="rgb(222,18,33)" fg:x="64" fg:w="1"/><text x="79.2623%" y="911.50"></text></g><g><title>`0x7FF8ABAA438D (1 samples, 1.23%)</title><rect x="80.2469%" y="933" width="1.2346%" height="15" fill="rgb(213,199,7)" fg:x="65" fg:w="1"/><text x="80.4969%" y="943.50"></text></g><g><title>`0x7FF8ABAA4250 (1 samples, 1.23%)</title><rect x="80.2469%" y="917" width="1.2346%" height="15" fill="rgb(250,110,10)" fg:x="65" fg:w="1"/><text x="80.4969%" y="927.50"></text></g><g><title>`0x7FF8AA907E33 (1 samples, 1.23%)</title><rect x="80.2469%" y="901" width="1.2346%" height="15" fill="rgb(248,123,6)" fg:x="65" fg:w="1"/><text x="80.4969%" y="911.50"></text></g><g><title>`0x7FF8ABA91009 (1 samples, 1.23%)</title><rect x="80.2469%" y="885" width="1.2346%" height="15" fill="rgb(206,91,31)" fg:x="65" fg:w="1"/><text x="80.4969%" y="895.50"></text></g><g><title>`0x7FF8ABAA2F38 (1 samples, 1.23%)</title><rect x="80.2469%" y="869" width="1.2346%" height="15" fill="rgb(211,154,13)" fg:x="65" fg:w="1"/><text x="80.4969%" y="879.50"></text></g><g><title>`0x7FF8ABD564FF (1 samples, 1.23%)</title><rect x="81.4815%" y="933" width="1.2346%" height="15" fill="rgb(225,148,7)" fg:x="66" fg:w="1"/><text x="81.7315%" y="943.50"></text></g><g><title>`0x7FF8ABD5973E (1 samples, 1.23%)</title><rect x="81.4815%" y="917" width="1.2346%" height="15" fill="rgb(220,160,43)" fg:x="66" fg:w="1"/><text x="81.7315%" y="927.50"></text></g><g><title>`0x7FF8ABD42089 (1 samples, 1.23%)</title><rect x="81.4815%" y="901" width="1.2346%" height="15" fill="rgb(213,52,39)" fg:x="66" fg:w="1"/><text x="81.7315%" y="911.50"></text></g><g><title>`0x7FF8AA8BE76A (1 samples, 1.23%)</title><rect x="81.4815%" y="885" width="1.2346%" height="15" fill="rgb(243,137,7)" fg:x="66" fg:w="1"/><text x="81.7315%" y="895.50"></text></g><g><title>`0x7FF8AD0C688C (1 samples, 1.23%)</title><rect x="81.4815%" y="869" width="1.2346%" height="15" fill="rgb(230,79,13)" fg:x="66" fg:w="1"/><text x="81.7315%" y="879.50"></text></g><g><title>`0x7FF8AD0C6977 (1 samples, 1.23%)</title><rect x="81.4815%" y="853" width="1.2346%" height="15" fill="rgb(247,105,23)" fg:x="66" fg:w="1"/><text x="81.7315%" y="863.50"></text></g><g><title>`0x7FF8AD0CDB9F (1 samples, 1.23%)</title><rect x="81.4815%" y="837" width="1.2346%" height="15" fill="rgb(223,179,41)" fg:x="66" fg:w="1"/><text x="81.7315%" y="847.50"></text></g><g><title>`0x7FF8AD0CDD20 (1 samples, 1.23%)</title><rect x="81.4815%" y="821" width="1.2346%" height="15" fill="rgb(218,9,34)" fg:x="66" fg:w="1"/><text x="81.7315%" y="831.50"></text></g><g><title>`0x7FF8AD124680 (1 samples, 1.23%)</title><rect x="81.4815%" y="805" width="1.2346%" height="15" fill="rgb(222,106,8)" fg:x="66" fg:w="1"/><text x="81.7315%" y="815.50"></text></g><g><title>`0x7FF8AD0E2B26 (1 samples, 1.23%)</title><rect x="81.4815%" y="789" width="1.2346%" height="15" fill="rgb(211,220,0)" fg:x="66" fg:w="1"/><text x="81.7315%" y="799.50"></text></g><g><title>`0x7FF8AB81CF74 (1 samples, 1.23%)</title><rect x="82.7160%" y="757" width="1.2346%" height="15" fill="rgb(229,52,16)" fg:x="67" fg:w="1"/><text x="82.9660%" y="767.50"></text></g><g><title>`0x7FF8AB81D915 (1 samples, 1.23%)</title><rect x="82.7160%" y="741" width="1.2346%" height="15" fill="rgb(212,155,18)" fg:x="67" fg:w="1"/><text x="82.9660%" y="751.50"></text></g><g><title>`0x7FF8AB815AD9 (1 samples, 1.23%)</title><rect x="82.7160%" y="725" width="1.2346%" height="15" fill="rgb(242,21,14)" fg:x="67" fg:w="1"/><text x="82.9660%" y="735.50"></text></g><g><title>`0x7FF8AB816041 (1 samples, 1.23%)</title><rect x="82.7160%" y="709" width="1.2346%" height="15" fill="rgb(222,19,48)" fg:x="67" fg:w="1"/><text x="82.9660%" y="719.50"></text></g><g><title>`0x7FF8AB80D5D8 (1 samples, 1.23%)</title><rect x="82.7160%" y="693" width="1.2346%" height="15" fill="rgb(232,45,27)" fg:x="67" fg:w="1"/><text x="82.9660%" y="703.50"></text></g><g><title>`0x7FF8AD0F2B20 (1 samples, 1.23%)</title><rect x="82.7160%" y="677" width="1.2346%" height="15" fill="rgb(249,103,42)" fg:x="67" fg:w="1"/><text x="82.9660%" y="687.50"></text></g><g><title>`0x7FF8AD0F2C15 (1 samples, 1.23%)</title><rect x="82.7160%" y="661" width="1.2346%" height="15" fill="rgb(246,81,33)" fg:x="67" fg:w="1"/><text x="82.9660%" y="671.50"></text></g><g><title>`0x7FF8AD150874 (1 samples, 1.23%)</title><rect x="82.7160%" y="645" width="1.2346%" height="15" fill="rgb(252,33,42)" fg:x="67" fg:w="1"/><text x="82.9660%" y="655.50"></text></g><g><title>`0x7FF8AC3E11B4 (2 samples, 2.47%)</title><rect x="82.7160%" y="933" width="2.4691%" height="15" fill="rgb(209,212,41)" fg:x="67" fg:w="2"/><text x="82.9660%" y="943.50">`0..</text></g><g><title>`0x7FF8AC3E1032 (2 samples, 2.47%)</title><rect x="82.7160%" y="917" width="2.4691%" height="15" fill="rgb(207,154,6)" fg:x="67" fg:w="2"/><text x="82.9660%" y="927.50">`0..</text></g><g><title>`0x7FF8AACFE473 (2 samples, 2.47%)</title><rect x="82.7160%" y="901" width="2.4691%" height="15" fill="rgb(223,64,47)" fg:x="67" fg:w="2"/><text x="82.9660%" y="911.50">`0..</text></g><g><title>`0x7FF8AC2D2819 (2 samples, 2.47%)</title><rect x="82.7160%" y="885" width="2.4691%" height="15" fill="rgb(211,161,38)" fg:x="67" fg:w="2"/><text x="82.9660%" y="895.50">`0..</text></g><g><title>`0x7FF8AC374F24 (2 samples, 2.47%)</title><rect x="82.7160%" y="869" width="2.4691%" height="15" fill="rgb(219,138,40)" fg:x="67" fg:w="2"/><text x="82.9660%" y="879.50">`0..</text></g><g><title>`0x7FF8AA8CAC31 (2 samples, 2.47%)</title><rect x="82.7160%" y="853" width="2.4691%" height="15" fill="rgb(241,228,46)" fg:x="67" fg:w="2"/><text x="82.9660%" y="863.50">`0..</text></g><g><title>`0x7FF8AD0E010D (2 samples, 2.47%)</title><rect x="82.7160%" y="837" width="2.4691%" height="15" fill="rgb(223,209,38)" fg:x="67" fg:w="2"/><text x="82.9660%" y="847.50">`0..</text></g><g><title>`0x7FF8AD11C0E0 (2 samples, 2.47%)</title><rect x="82.7160%" y="821" width="2.4691%" height="15" fill="rgb(236,164,45)" fg:x="67" fg:w="2"/><text x="82.9660%" y="831.50">`0..</text></g><g><title>`0x7FF8AD11C05A (2 samples, 2.47%)</title><rect x="82.7160%" y="805" width="2.4691%" height="15" fill="rgb(231,15,5)" fg:x="67" fg:w="2"/><text x="82.9660%" y="815.50">`0..</text></g><g><title>`0x7FF8AD11C2C7 (2 samples, 2.47%)</title><rect x="82.7160%" y="789" width="2.4691%" height="15" fill="rgb(252,35,15)" fg:x="67" fg:w="2"/><text x="82.9660%" y="799.50">`0..</text></g><g><title>`0x7FF8AD0C9A1D (2 samples, 2.47%)</title><rect x="82.7160%" y="773" width="2.4691%" height="15" fill="rgb(248,181,18)" fg:x="67" fg:w="2"/><text x="82.9660%" y="783.50">`0..</text></g><g><title>`0x7FF8AC1F78A7 (1 samples, 1.23%)</title><rect x="83.9506%" y="757" width="1.2346%" height="15" fill="rgb(233,39,42)" fg:x="68" fg:w="1"/><text x="84.2006%" y="767.50"></text></g><g><title>`0x7FF8AC1F7BA3 (1 samples, 1.23%)</title><rect x="83.9506%" y="741" width="1.2346%" height="15" fill="rgb(238,110,33)" fg:x="68" fg:w="1"/><text x="84.2006%" y="751.50"></text></g><g><title>`0x7FF8AC209798 (1 samples, 1.23%)</title><rect x="83.9506%" y="725" width="1.2346%" height="15" fill="rgb(233,195,10)" fg:x="68" fg:w="1"/><text x="84.2006%" y="735.50"></text></g><g><title>`0x7FF8AA9054D8 (1 samples, 1.23%)</title><rect x="83.9506%" y="709" width="1.2346%" height="15" fill="rgb(254,105,3)" fg:x="68" fg:w="1"/><text x="84.2006%" y="719.50"></text></g><g><title>`0x7FF8AD0BAC87 (1 samples, 1.23%)</title><rect x="83.9506%" y="693" width="1.2346%" height="15" fill="rgb(221,225,9)" fg:x="68" fg:w="1"/><text x="84.2006%" y="703.50"></text></g><g><title>`0x7FF8AD0B9B1A (1 samples, 1.23%)</title><rect x="83.9506%" y="677" width="1.2346%" height="15" fill="rgb(224,227,45)" fg:x="68" fg:w="1"/><text x="84.2006%" y="687.50"></text></g><g><title>`0x7FF8AD14D3A4 (1 samples, 1.23%)</title><rect x="83.9506%" y="661" width="1.2346%" height="15" fill="rgb(229,198,43)" fg:x="68" fg:w="1"/><text x="84.2006%" y="671.50"></text></g><g><title>`0x7FF8AD11C05A (5 samples, 6.17%)</title><rect x="80.2469%" y="981" width="6.1728%" height="15" fill="rgb(206,209,35)" fg:x="65" fg:w="5"/><text x="80.4969%" y="991.50">`0x7FF8A..</text></g><g><title>`0x7FF8AD11C2C7 (5 samples, 6.17%)</title><rect x="80.2469%" y="965" width="6.1728%" height="15" fill="rgb(245,195,53)" fg:x="65" fg:w="5"/><text x="80.4969%" y="975.50">`0x7FF8A..</text></g><g><title>`0x7FF8AD0C9A1D (5 samples, 6.17%)</title><rect x="80.2469%" y="949" width="6.1728%" height="15" fill="rgb(240,92,26)" fg:x="65" fg:w="5"/><text x="80.4969%" y="959.50">`0x7FF8A..</text></g><g><title>`0x7FF8AC3E11CF (1 samples, 1.23%)</title><rect x="85.1852%" y="933" width="1.2346%" height="15" fill="rgb(207,40,23)" fg:x="69" fg:w="1"/><text x="85.4352%" y="943.50"></text></g><g><title>`0x7FF8AC3F07F3 (1 samples, 1.23%)</title><rect x="85.1852%" y="917" width="1.2346%" height="15" fill="rgb(223,111,35)" fg:x="69" fg:w="1"/><text x="85.4352%" y="927.50"></text></g><g><title>`0x7FF8AC375368 (1 samples, 1.23%)</title><rect x="85.1852%" y="901" width="1.2346%" height="15" fill="rgb(229,147,28)" fg:x="69" fg:w="1"/><text x="85.4352%" y="911.50"></text></g><g><title>`0x7FF8AC375484 (1 samples, 1.23%)</title><rect x="85.1852%" y="885" width="1.2346%" height="15" fill="rgb(211,29,28)" fg:x="69" fg:w="1"/><text x="85.4352%" y="895.50"></text></g><g><title>`0x7FF8AD0F2EA0 (1 samples, 1.23%)</title><rect x="85.1852%" y="869" width="1.2346%" height="15" fill="rgb(228,72,33)" fg:x="69" fg:w="1"/><text x="85.4352%" y="879.50"></text></g><g><title>`0x7FF8AD0F30E5 (1 samples, 1.23%)</title><rect x="85.1852%" y="853" width="1.2346%" height="15" fill="rgb(205,214,31)" fg:x="69" fg:w="1"/><text x="85.4352%" y="863.50"></text></g><g><title>`0x7FF8AD0F2FB8 (1 samples, 1.23%)</title><rect x="85.1852%" y="837" width="1.2346%" height="15" fill="rgb(224,111,15)" fg:x="69" fg:w="1"/><text x="85.4352%" y="847.50"></text></g><g><title>`0x7FF8AD0F362D (1 samples, 1.23%)</title><rect x="85.1852%" y="821" width="1.2346%" height="15" fill="rgb(253,21,26)" fg:x="69" fg:w="1"/><text x="85.4352%" y="831.50"></text></g><g><title>`0x7FF8AD0F3A0F (1 samples, 1.23%)</title><rect x="85.1852%" y="805" width="1.2346%" height="15" fill="rgb(245,139,43)" fg:x="69" fg:w="1"/><text x="85.4352%" y="815.50"></text></g><g><title>`0x7FF8AC36EB9C (1 samples, 1.23%)</title><rect x="85.1852%" y="789" width="1.2346%" height="15" fill="rgb(252,170,7)" fg:x="69" fg:w="1"/><text x="85.4352%" y="799.50"></text></g><g><title>`0x7FF8AAFD52C4 (1 samples, 1.23%)</title><rect x="86.4198%" y="917" width="1.2346%" height="15" fill="rgb(231,118,14)" fg:x="70" fg:w="1"/><text x="86.6698%" y="927.50"></text></g><g><title>`0x7FF8AAFD5142 (1 samples, 1.23%)</title><rect x="86.4198%" y="901" width="1.2346%" height="15" fill="rgb(238,83,0)" fg:x="70" fg:w="1"/><text x="86.6698%" y="911.50"></text></g><g><title>`0x7FF8AACFE473 (1 samples, 1.23%)</title><rect x="86.4198%" y="885" width="1.2346%" height="15" fill="rgb(221,39,39)" fg:x="70" fg:w="1"/><text x="86.6698%" y="895.50"></text></g><g><title>`0x7FF8AAFC1140 (1 samples, 1.23%)</title><rect x="86.4198%" y="869" width="1.2346%" height="15" fill="rgb(222,119,46)" fg:x="70" fg:w="1"/><text x="86.6698%" y="879.50"></text></g><g><title>`0x7FF8AAFC778B (1 samples, 1.23%)</title><rect x="86.4198%" y="853" width="1.2346%" height="15" fill="rgb(222,165,49)" fg:x="70" fg:w="1"/><text x="86.6698%" y="863.50"></text></g><g><title>`0x7FF8AAFC803B (1 samples, 1.23%)</title><rect x="86.4198%" y="837" width="1.2346%" height="15" fill="rgb(219,113,52)" fg:x="70" fg:w="1"/><text x="86.6698%" y="847.50"></text></g><g><title>`0x7FF8AAFC67EA (1 samples, 1.23%)</title><rect x="86.4198%" y="821" width="1.2346%" height="15" fill="rgb(214,7,15)" fg:x="70" fg:w="1"/><text x="86.6698%" y="831.50"></text></g><g><title>`0x7FF8AAFC6698 (1 samples, 1.23%)</title><rect x="86.4198%" y="805" width="1.2346%" height="15" fill="rgb(235,32,4)" fg:x="70" fg:w="1"/><text x="86.6698%" y="815.50"></text></g><g><title>`0x7FF8AACF571F (1 samples, 1.23%)</title><rect x="86.4198%" y="789" width="1.2346%" height="15" fill="rgb(238,90,54)" fg:x="70" fg:w="1"/><text x="86.6698%" y="799.50"></text></g><g><title>`0x7FF8AACEC2E7 (1 samples, 1.23%)</title><rect x="86.4198%" y="773" width="1.2346%" height="15" fill="rgb(213,208,19)" fg:x="70" fg:w="1"/><text x="86.6698%" y="783.50"></text></g><g><title>`0x7FF8AACEC32F (1 samples, 1.23%)</title><rect x="86.4198%" y="757" width="1.2346%" height="15" fill="rgb(233,156,4)" fg:x="70" fg:w="1"/><text x="86.6698%" y="767.50"></text></g><g><title>`0x7FF8AACEC5ED (1 samples, 1.23%)</title><rect x="86.4198%" y="741" width="1.2346%" height="15" fill="rgb(207,194,5)" fg:x="70" fg:w="1"/><text x="86.6698%" y="751.50"></text></g><g><title>`0x7FF8AACECDB6 (1 samples, 1.23%)</title><rect x="86.4198%" y="725" width="1.2346%" height="15" fill="rgb(206,111,30)" fg:x="70" fg:w="1"/><text x="86.6698%" y="735.50"></text></g><g><title>`0x7FF8AACECE55 (1 samples, 1.23%)</title><rect x="86.4198%" y="709" width="1.2346%" height="15" fill="rgb(243,70,54)" fg:x="70" fg:w="1"/><text x="86.6698%" y="719.50"></text></g><g><title>`0x7FF8AACECEF0 (1 samples, 1.23%)</title><rect x="86.4198%" y="693" width="1.2346%" height="15" fill="rgb(242,28,8)" fg:x="70" fg:w="1"/><text x="86.6698%" y="703.50"></text></g><g><title>`0x7FF8AACECF3F (1 samples, 1.23%)</title><rect x="86.4198%" y="677" width="1.2346%" height="15" fill="rgb(219,106,18)" fg:x="70" fg:w="1"/><text x="86.6698%" y="687.50"></text></g><g><title>`0x7FF8AACED06A (1 samples, 1.23%)</title><rect x="86.4198%" y="661" width="1.2346%" height="15" fill="rgb(244,222,10)" fg:x="70" fg:w="1"/><text x="86.6698%" y="671.50"></text></g><g><title>`0x7FF8AACED897 (1 samples, 1.23%)</title><rect x="86.4198%" y="645" width="1.2346%" height="15" fill="rgb(236,179,52)" fg:x="70" fg:w="1"/><text x="86.6698%" y="655.50"></text></g><g><title>`0x7FF8AACEC0DB (1 samples, 1.23%)</title><rect x="86.4198%" y="629" width="1.2346%" height="15" fill="rgb(213,23,39)" fg:x="70" fg:w="1"/><text x="86.6698%" y="639.50"></text></g><g><title>`0x7FF8AACEFDE6 (1 samples, 1.23%)</title><rect x="86.4198%" y="613" width="1.2346%" height="15" fill="rgb(238,48,10)" fg:x="70" fg:w="1"/><text x="86.6698%" y="623.50"></text></g><g><title>`0x7FF8AD0DB44D (1 samples, 1.23%)</title><rect x="86.4198%" y="597" width="1.2346%" height="15" fill="rgb(251,196,23)" fg:x="70" fg:w="1"/><text x="86.6698%" y="607.50"></text></g><g><title>`0x7FF8AD0DDBFA (1 samples, 1.23%)</title><rect x="86.4198%" y="581" width="1.2346%" height="15" fill="rgb(250,152,24)" fg:x="70" fg:w="1"/><text x="86.6698%" y="591.50"></text></g><g><title>`0x7FF8AD0BE37B (1 samples, 1.23%)</title><rect x="86.4198%" y="565" width="1.2346%" height="15" fill="rgb(209,150,17)" fg:x="70" fg:w="1"/><text x="86.6698%" y="575.50"></text></g><g><title>`0x7FF8AD0BE715 (1 samples, 1.23%)</title><rect x="86.4198%" y="549" width="1.2346%" height="15" fill="rgb(234,202,34)" fg:x="70" fg:w="1"/><text x="86.6698%" y="559.50"></text></g><g><title>`0x7FF8AD14D2E4 (1 samples, 1.23%)</title><rect x="86.4198%" y="533" width="1.2346%" height="15" fill="rgb(253,148,53)" fg:x="70" fg:w="1"/><text x="86.6698%" y="543.50"></text></g><g><title>`0x7FF8ABF6A274 (1 samples, 1.23%)</title><rect x="87.6543%" y="901" width="1.2346%" height="15" fill="rgb(218,129,16)" fg:x="71" fg:w="1"/><text x="87.9043%" y="911.50"></text></g><g><title>`0x7FF8ABE93D69 (1 samples, 1.23%)</title><rect x="87.6543%" y="885" width="1.2346%" height="15" fill="rgb(216,85,19)" fg:x="71" fg:w="1"/><text x="87.9043%" y="895.50"></text></g><g><title>`0x7FF8ABE8B270 (1 samples, 1.23%)</title><rect x="87.6543%" y="869" width="1.2346%" height="15" fill="rgb(235,228,7)" fg:x="71" fg:w="1"/><text x="87.9043%" y="879.50"></text></g><g><title>`0x7FF8ABE8B80C (1 samples, 1.23%)</title><rect x="87.6543%" y="853" width="1.2346%" height="15" fill="rgb(245,175,0)" fg:x="71" fg:w="1"/><text x="87.9043%" y="863.50"></text></g><g><title>`0x7FF8ABEC0E2D (1 samples, 1.23%)</title><rect x="87.6543%" y="837" width="1.2346%" height="15" fill="rgb(208,168,36)" fg:x="71" fg:w="1"/><text x="87.9043%" y="847.50"></text></g><g><title>`0x7FF8AA8C3439 (1 samples, 1.23%)</title><rect x="87.6543%" y="821" width="1.2346%" height="15" fill="rgb(246,171,24)" fg:x="71" fg:w="1"/><text x="87.9043%" y="831.50"></text></g><g><title>`0x7FF8AA8C3591 (1 samples, 1.23%)</title><rect x="87.6543%" y="805" width="1.2346%" height="15" fill="rgb(215,142,24)" fg:x="71" fg:w="1"/><text x="87.9043%" y="815.50"></text></g><g><title>`0x7FF8AA8C3ECD (1 samples, 1.23%)</title><rect x="87.6543%" y="789" width="1.2346%" height="15" fill="rgb(250,187,7)" fg:x="71" fg:w="1"/><text x="87.9043%" y="799.50"></text></g><g><title>`0x7FF8AA944E04 (1 samples, 1.23%)</title><rect x="87.6543%" y="773" width="1.2346%" height="15" fill="rgb(228,66,33)" fg:x="71" fg:w="1"/><text x="87.9043%" y="783.50"></text></g><g><title>`0x7FF8AA8C3F76 (1 samples, 1.23%)</title><rect x="87.6543%" y="757" width="1.2346%" height="15" fill="rgb(234,215,21)" fg:x="71" fg:w="1"/><text x="87.9043%" y="767.50"></text></g><g><title>`0x7FF8AD14F3F4 (1 samples, 1.23%)</title><rect x="87.6543%" y="741" width="1.2346%" height="15" fill="rgb(222,191,20)" fg:x="71" fg:w="1"/><text x="87.9043%" y="751.50"></text></g><g><title>`0x7FF8ABF6493F (2 samples, 2.47%)</title><rect x="87.6543%" y="917" width="2.4691%" height="15" fill="rgb(245,79,54)" fg:x="71" fg:w="2"/><text x="87.9043%" y="927.50">`0..</text></g><g><title>`0x7FF8ABF6A38E (1 samples, 1.23%)</title><rect x="88.8889%" y="901" width="1.2346%" height="15" fill="rgb(240,10,37)" fg:x="72" fg:w="1"/><text x="89.1389%" y="911.50"></text></g><g><title>`0x7FF8ABF4ED07 (1 samples, 1.23%)</title><rect x="88.8889%" y="885" width="1.2346%" height="15" fill="rgb(214,192,32)" fg:x="72" fg:w="1"/><text x="89.1389%" y="895.50"></text></g><g><title>`0x7FF8AA90ACDE (1 samples, 1.23%)</title><rect x="88.8889%" y="869" width="1.2346%" height="15" fill="rgb(209,36,54)" fg:x="72" fg:w="1"/><text x="89.1389%" y="879.50"></text></g><g><title>`0x7FF8AA8BF84F (1 samples, 1.23%)</title><rect x="88.8889%" y="853" width="1.2346%" height="15" fill="rgb(220,10,11)" fg:x="72" fg:w="1"/><text x="89.1389%" y="863.50"></text></g><g><title>`0x7FF8AD14D7E4 (1 samples, 1.23%)</title><rect x="88.8889%" y="837" width="1.2346%" height="15" fill="rgb(221,106,17)" fg:x="72" fg:w="1"/><text x="89.1389%" y="847.50"></text></g><g><title>`0x7FF8ACA3893C (1 samples, 1.23%)</title><rect x="90.1235%" y="917" width="1.2346%" height="15" fill="rgb(251,142,44)" fg:x="73" fg:w="1"/><text x="90.3735%" y="927.50"></text></g><g><title>`0x7FF8ACA38950 (1 samples, 1.23%)</title><rect x="91.3580%" y="917" width="1.2346%" height="15" fill="rgb(238,13,15)" fg:x="74" fg:w="1"/><text x="91.6080%" y="927.50"></text></g><g><title>`0x7FF8ACA3A771 (1 samples, 1.23%)</title><rect x="91.3580%" y="901" width="1.2346%" height="15" fill="rgb(208,107,27)" fg:x="74" fg:w="1"/><text x="91.6080%" y="911.50"></text></g><g><title>`0x7FF8AA8C56B2 (1 samples, 1.23%)</title><rect x="91.3580%" y="885" width="1.2346%" height="15" fill="rgb(205,136,37)" fg:x="74" fg:w="1"/><text x="91.6080%" y="895.50"></text></g><g><title>`0x7FF8AD0C6A15 (1 samples, 1.23%)</title><rect x="91.3580%" y="869" width="1.2346%" height="15" fill="rgb(250,205,27)" fg:x="74" fg:w="1"/><text x="91.6080%" y="879.50"></text></g><g><title>`0x7FF8ACA38AA5 (1 samples, 1.23%)</title><rect x="92.5926%" y="917" width="1.2346%" height="15" fill="rgb(210,80,43)" fg:x="75" fg:w="1"/><text x="92.8426%" y="927.50"></text></g><g><title>`0x7FF8ACA467CF (1 samples, 1.23%)</title><rect x="92.5926%" y="901" width="1.2346%" height="15" fill="rgb(247,160,36)" fg:x="75" fg:w="1"/><text x="92.8426%" y="911.50"></text></g><g><title>`0x7FF8AD0F2EA0 (1 samples, 1.23%)</title><rect x="92.5926%" y="885" width="1.2346%" height="15" fill="rgb(234,13,49)" fg:x="75" fg:w="1"/><text x="92.8426%" y="895.50"></text></g><g><title>`0x7FF8AD0F30E5 (1 samples, 1.23%)</title><rect x="92.5926%" y="869" width="1.2346%" height="15" fill="rgb(234,122,0)" fg:x="75" fg:w="1"/><text x="92.8426%" y="879.50"></text></g><g><title>`0x7FF8AD0F2F86 (1 samples, 1.23%)</title><rect x="92.5926%" y="853" width="1.2346%" height="15" fill="rgb(207,146,38)" fg:x="75" fg:w="1"/><text x="92.8426%" y="863.50"></text></g><g><title>`0x7FF8AD150874 (1 samples, 1.23%)</title><rect x="92.5926%" y="837" width="1.2346%" height="15" fill="rgb(207,177,25)" fg:x="75" fg:w="1"/><text x="92.8426%" y="847.50"></text></g><g><title>`0x7FF8AD11C05A (9 samples, 11.11%)</title><rect x="86.4198%" y="965" width="11.1111%" height="15" fill="rgb(211,178,42)" fg:x="70" fg:w="9"/><text x="86.6698%" y="975.50">`0x7FF8AD11C05A</text></g><g><title>`0x7FF8AD11C2C7 (9 samples, 11.11%)</title><rect x="86.4198%" y="949" width="11.1111%" height="15" fill="rgb(230,69,54)" fg:x="70" fg:w="9"/><text x="86.6698%" y="959.50">`0x7FF8AD11C2C7</text></g><g><title>`0x7FF8AD0C9A1D (9 samples, 11.11%)</title><rect x="86.4198%" y="933" width="11.1111%" height="15" fill="rgb(214,135,41)" fg:x="70" fg:w="9"/><text x="86.6698%" y="943.50">`0x7FF8AD0C9A1D</text></g><g><title>`0x7FF8ACA38B66 (3 samples, 3.70%)</title><rect x="93.8272%" y="917" width="3.7037%" height="15" fill="rgb(237,67,25)" fg:x="76" fg:w="3"/><text x="94.0772%" y="927.50">`0x7..</text></g><g><title>`0x7FF8AA79257E (3 samples, 3.70%)</title><rect x="93.8272%" y="901" width="3.7037%" height="15" fill="rgb(222,189,50)" fg:x="76" fg:w="3"/><text x="94.0772%" y="911.50">`0x7..</text></g><g><title>`0x7FF8AAC06C84 (3 samples, 3.70%)</title><rect x="93.8272%" y="885" width="3.7037%" height="15" fill="rgb(245,148,34)" fg:x="76" fg:w="3"/><text x="94.0772%" y="895.50">`0x7..</text></g><g><title>`0x7FF8AD150E64 (1 samples, 1.23%)</title><rect x="96.2963%" y="869" width="1.2346%" height="15" fill="rgb(222,29,6)" fg:x="78" fg:w="1"/><text x="96.5463%" y="879.50"></text></g><g><title>`0x7FF8ACA3DB69 (1 samples, 1.23%)</title><rect x="96.2963%" y="853" width="1.2346%" height="15" fill="rgb(221,189,43)" fg:x="78" fg:w="1"/><text x="96.5463%" y="863.50"></text></g><g><title>`0x7FF8ACA3DD4E (1 samples, 1.23%)</title><rect x="96.2963%" y="837" width="1.2346%" height="15" fill="rgb(207,36,27)" fg:x="78" fg:w="1"/><text x="96.5463%" y="847.50"></text></g><g><title>`0x7FF8AB9E82A0 (1 samples, 1.23%)</title><rect x="96.2963%" y="821" width="1.2346%" height="15" fill="rgb(217,90,24)" fg:x="78" fg:w="1"/><text x="96.5463%" y="831.50"></text></g><g><title>`0x7FF8AD124C43 (38 samples, 46.91%)</title><rect x="51.8519%" y="1045" width="46.9136%" height="15" fill="rgb(224,66,35)" fg:x="42" fg:w="38"/><text x="52.1019%" y="1055.50">`0x7FF8AD124C43</text></g><g><title>`0x7FF8AD124DBB (38 samples, 46.91%)</title><rect x="51.8519%" y="1029" width="46.9136%" height="15" fill="rgb(221,13,50)" fg:x="42" fg:w="38"/><text x="52.1019%" y="1039.50">`0x7FF8AD124DBB</text></g><g><title>`0x7FF8AD183C42 (15 samples, 18.52%)</title><rect x="80.2469%" y="1013" width="18.5185%" height="15" fill="rgb(236,68,49)" fg:x="65" fg:w="15"/><text x="80.4969%" y="1023.50">`0x7FF8AD183C42</text></g><g><title>`0x7FF8AD11C0E0 (15 samples, 18.52%)</title><rect x="80.2469%" y="997" width="18.5185%" height="15" fill="rgb(229,146,28)" fg:x="65" fg:w="15"/><text x="80.4969%" y="1007.50">`0x7FF8AD11C0E0</text></g><g><title>`0x7FF8AD11C0E0 (10 samples, 12.35%)</title><rect x="86.4198%" y="981" width="12.3457%" height="15" fill="rgb(225,31,38)" fg:x="70" fg:w="10"/><text x="86.6698%" y="991.50">`0x7FF8AD11C0E0</text></g><g><title>`0x7FF8AD11C0E0 (1 samples, 1.23%)</title><rect x="97.5309%" y="965" width="1.2346%" height="15" fill="rgb(250,208,3)" fg:x="79" fg:w="1"/><text x="97.7809%" y="975.50"></text></g><g><title>`0x7FF8AD11C05A (1 samples, 1.23%)</title><rect x="97.5309%" y="949" width="1.2346%" height="15" fill="rgb(246,54,23)" fg:x="79" fg:w="1"/><text x="97.7809%" y="959.50"></text></g><g><title>`0x7FF8AD11C2C7 (1 samples, 1.23%)</title><rect x="97.5309%" y="933" width="1.2346%" height="15" fill="rgb(243,76,11)" fg:x="79" fg:w="1"/><text x="97.7809%" y="943.50"></text></g><g><title>`0x7FF8AD0C9A1D (1 samples, 1.23%)</title><rect x="97.5309%" y="917" width="1.2346%" height="15" fill="rgb(245,21,50)" fg:x="79" fg:w="1"/><text x="97.7809%" y="927.50"></text></g><g><title>`0x7FF8AACF6216 (1 samples, 1.23%)</title><rect x="97.5309%" y="901" width="1.2346%" height="15" fill="rgb(228,9,43)" fg:x="79" fg:w="1"/><text x="97.7809%" y="911.50"></text></g><g><title>`0x7FF8AACF7730 (1 samples, 1.23%)</title><rect x="97.5309%" y="885" width="1.2346%" height="15" fill="rgb(208,100,47)" fg:x="79" fg:w="1"/><text x="97.7809%" y="895.50"></text></g><g><title>`0x7FF8AACF6FE6 (1 samples, 1.23%)</title><rect x="97.5309%" y="869" width="1.2346%" height="15" fill="rgb(232,26,8)" fg:x="79" fg:w="1"/><text x="97.7809%" y="879.50"></text></g><g><title>`0x7FF8AACF766E (1 samples, 1.23%)</title><rect x="97.5309%" y="853" width="1.2346%" height="15" fill="rgb(216,166,38)" fg:x="79" fg:w="1"/><text x="97.7809%" y="863.50"></text></g><g><title>`0x7FF8AA90AC70 (1 samples, 1.23%)</title><rect x="97.5309%" y="837" width="1.2346%" height="15" fill="rgb(251,202,51)" fg:x="79" fg:w="1"/><text x="97.7809%" y="847.50"></text></g><g><title>`0x7FF8AD124830 (1 samples, 1.23%)</title><rect x="97.5309%" y="821" width="1.2346%" height="15" fill="rgb(254,216,34)" fg:x="79" fg:w="1"/><text x="97.7809%" y="831.50"></text></g><g><title>all (81 samples, 100%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(251,32,27)" fg:x="0" fg:w="81"/><text x="0.2500%" y="1087.50"></text></g><g><title>`0x7FF8AD124BEE (39 samples, 48.15%)</title><rect x="51.8519%" y="1061" width="48.1481%" height="15" fill="rgb(208,127,28)" fg:x="42" fg:w="39"/><text x="52.1019%" y="1071.50">`0x7FF8AD124BEE</text></g><g><title>`0x7FF8AD124C54 (1 samples, 1.23%)</title><rect x="98.7654%" y="1045" width="1.2346%" height="15" fill="rgb(224,137,22)" fg:x="80" fg:w="1"/><text x="99.0154%" y="1055.50"></text></g><g><title>`0x7FF8AD180391 (1 samples, 1.23%)</title><rect x="98.7654%" y="1029" width="1.2346%" height="15" fill="rgb(254,70,32)" fg:x="80" fg:w="1"/><text x="99.0154%" y="1039.50"></text></g><g><title>`0x7FF8AD0C06A3 (1 samples, 1.23%)</title><rect x="98.7654%" y="1013" width="1.2346%" height="15" fill="rgb(229,75,37)" fg:x="80" fg:w="1"/><text x="99.0154%" y="1023.50"></text></g></svg></svg>